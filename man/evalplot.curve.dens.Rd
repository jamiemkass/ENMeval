% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{evalplot.curve.dens}
\alias{evalplot.curve.dens}
\title{Response curve and density plots for one variable}
\usage{
evalplot.curve.dens(
  e,
  mod.name,
  envs,
  var,
  fun = mean,
  exp.curve = 0.025,
  nr.curve = 100,
  clamp.tails = TRUE,
  bw.envs = 10
)
}
\arguments{
\item{e}{An ENMevaluation object.}

\item{mod.name}{A character defining model (e.g., "fc.LQ_rm.1")}

\item{envs}{Raster data (SpatRaster) of environmental variables for model projection.}

\item{var}{A character string specifying the variable name for the response curve.}

\item{fun}{A function to compute constant values for other variables (default is `median`).}

\item{exp.curve}{Numeric value indicating the range expansion for plotting (default is 0.025).}

\item{nr.curve}{Integer specifying the number of points for the response curve (default is 100).}

\item{clamp.tails}{Logical; if `TRUE`, clamping tails in plot (default is `TRUE`).}

\item{bw.envs}{The smoothing bandwidth to be used in the environmental variables}
}
\value{
A combined patchwork plot of all response curves with a shared y-axis label.
}
\description{
A wrapper function to plot response curves and density plot.
}
\examples{
\dontrun{
occs <- read.csv(file.path(system.file(package="predicts"), "/ex/bradypus.csv"))[,2:3]
envs <- rast(list.files(path=paste(system.file(package="predicts"), "/ex", sep=""), 
                        pattern="tif$", full.names=TRUE))
# No biome
envs <- envs[[!(names(envs) \%in\% "biome")]]
occs.z <- cbind(occs, terra::extract(envs, occs, ID = FALSE))
bg <- as.data.frame(predicts::backgroundSample(envs, n = 10000))
names(bg) <- names(occs)
bg.z <- cbind(bg, terra::extract(envs, bg, ID = FALSE))
os <- list(abs.auc.diff = FALSE, pred.type = "cloglog", validation.bg = "partition")
ps <- list(orientation = "lat_lat")
e.maxnet <- ENMevaluate(occs, envs, bg, 
                       tune.args = list(fc = "LQ", rm = 1), 
                        partitions = "block", other.settings = os, partition.settings = ps,
                        algorithm = "maxnet", overlap = TRUE)
# Transfer envs
tr_envs <- envs * 1.5
# Plot
evalplot.curve.dens(e.maxent, "fc.LQ_rm.1", tr_envs, "bio1", fun = median)
}
}
\author{
Gonzalo E. Pinilla-Buitrago
}
