% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{evalplot.curve}
\alias{evalplot.curve}
\title{Plot Response Curve for Maxent or Maxnet Models}
\usage{
evalplot.curve(
  mod,
  envs,
  var,
  fun = mean,
  exp.curve = 0.025,
  nr.curve = 100,
  clamp.tails = TRUE
)
}
\arguments{
\item{mod}{A maxent.jar or maxnet model object.}

\item{envs}{Raster data (SpatRaster) of environmental variables for model projection.}

\item{var}{A character string specifying the variable name for the response curve.}

\item{fun}{If maxent.jar a function to compute constant values for other variables (default is `mean`). Maxnet models always use mean.}

\item{exp.curve}{Numeric value indicating the range expansion for plotting (default is 0.025).}

\item{nr.curve}{Integer specifying the number of points for the response curve (default is 100).}

\item{clamp.tails}{Logical; if `TRUE`, clamping tails in plot (default is `TRUE`).}
}
\value{
A ggplot object of the response curve.
}
\description{
This function plots a response curve for a given environmental variable based on a maxent.jar
or maxnet model. It allows plotting clamping on or off and supports multiple variables via
a wrapper that combines plots using the patchwork package.
}
\examples{
\dontrun{
occs <- read.csv(file.path(system.file(package="predicts"), "/ex/bradypus.csv"))[,2:3]
envs <- rast(list.files(path=paste(system.file(package="predicts"), "/ex", sep=""), 
                        pattern="tif$", full.names=TRUE))
# No biome
envs <- envs[[!(names(envs) \%in\% "biome")]]
occs.z <- cbind(occs, terra::extract(envs, occs, ID = FALSE))
bg <- as.data.frame(predicts::backgroundSample(envs, n = 10000))
names(bg) <- names(occs)
bg.z <- cbind(bg, terra::extract(envs, bg, ID = FALSE))
os <- list(abs.auc.diff = FALSE, pred.type = "cloglog", validation.bg = "partition")
ps <- list(orientation = "lat_lat")
e.maxnet <- ENMevaluate(occs, envs, bg, 
                       tune.args = list(fc = "LQ", rm = 1), 
                        partitions = "block", other.settings = os, partition.settings = ps,
                        algorithm = "maxnet", overlap = TRUE)
# Transfer envs
tr_envs <- envs * 1.5
# Plot
# Plot with clamp tails
evalplot.curve(mod = e.maxnet@models$fc.LQ_rm.1, 
               envs = tr_envs, 
               var = "bio1")
# without tails
evalplot.curve(mod = e.maxnet@models$fc.LQ_rm.1, 
               envs = tr_envs, 
               var = "bio1", 
               clamp.tails = FALSE)
}
}
\author{
Gonzalo E. Pinilla- Buitrago
}
