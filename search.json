[{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"intro","dir":"Articles","previous_headings":"","what":"Introduction","title":"ENMeval 2.0.5 Vignette","text":"align new ENMeval 2.0.5, version updates vignette replacing raster functions terra, dismo functions predicts. updates made G. E. Pinilla-Buitrago. ENMeval R package performs automated tuning evaluations ecological niche models (ENMs, .k.. species distribution models SDMs), can estimate species’ ranges niche characteristics using data species occurrences environmental variables (Franklin 2010, Peterson et al. 2011, Guisan et al. 2017). frequently used ENMs machine learning algorithms settings can “tuned” determine optimal levels model complexity (Hastie et al. 2009, Radosavljevic & Anderson 2014, Hallgren et al. 2019). implementation, means building models varying settings, evaluating comparing performance select optimal settings. tuning exercises can result models balance goodness--fit (.e., avoiding overfitting) predictive ability. Model evaluation often done cross-validation, consists partitioning data groups, building model groups one, evaluating model left-group, repeating process groups left (Hastie et al. 2009, Roberts et al. 2017). ENMeval one primary function, ENMevaluate, runs tuning analysis evaluations, returning ENMevaluation object contains results. results include table evaluation statistics, fitted model objects, prediction rasters combination model settings. older versions ENMeval (0.3.0 earlier; Muscarella et al. 2014) implemented ENM presence-background algorithm Maxent Java software maxent.jar R package maxnet, ENMeval 2.0.x offers functionality adding customizing implementations ENM algorithms evaluations. new version also features automatic generation metadata, null model calculating effect size significance performance metrics, various plotting tools, options parallel computing, . updated vignette, detail full ENM analysis: acquisition processing input data, sampling background data, deciding partitioning methods, tuning models, examining results selecting optimal model settings, building null models test significance performance metrics, using ENMeval 2.0.x relevant R packages. addition vignette, excellent tutorials ENMs, can found References Resources section.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"data","dir":"Articles","previous_headings":"","what":"Data Acquisition & Pre-processing","title":"ENMeval 2.0.5 Vignette","text":"’ll start downloading occurrence dataset Bradypus variegatus, brown-throated sloth. Along way, notice load particular package, simply install install.packages, try library . going model climatic niche suitability focal species using long-term summarized climate data WorldClim 2.1. WorldClim range variables available various resolutions; simplicity, ’ll use 19 bioclimatic variables 5 arcmin resolution (10 km across equator) downloadable using geodata package. Many variables often highly correlated, modeling correlated variables can lead inaccurate results (even machine-learning methods robust collinearity), remove highest variance inflation factor (VIF), measure variable correlation.  Now let’s take look areas extent climatically different respect areas associated occurrence points. , ’ll use Multivariate Environmental Similarity surface, MESS (Elith et al. 2010). Higher positive values indicate increasing similarity, higher negative values indicate dissimilarity. methods besides MESS also proposed warrant exploration (e.g., Owens et al. 2013, Mesgaran et al. 2014). important investigate considering model transfer times places, environments extremely dissimilar used train model present can result projections high uncertainty (Wenger & Olden 2012, Wright et al. 2015, Soley-Guardia 2019).  Since models compare environment occurrence localities environment background localities, need sample random points background extent. Now specify study extent defines sample background data cropping global predictor variable rasters smaller region. help ensure include areas suitable species unoccupied due limitations like dispersal constraints, conservatively define background extent area surrounding occurrence localities (VanDerWal et al. 2009, Merow et al. 2013). buffering bounding box includes occurrence localities. methods background extent delineation (e.g., minimum convex hulls) conservative better characterize geographic space holding points. case, one many things need carefully consider study.   next step, ’ll sample 10,000 random points background (note number background points also consideration make respect study).","code":"# Load packages -- the order here is important because some pkg functions overwrite others. library(ENMeval) library(geodata) library(usdm) library(blockCV) library(sf) library(tibble) library(ggplot2) library(knitr) library(terra) library(dplyr)  # Set a random seed in order to be able to reproduce this analysis. set.seed(48)  # You can search online databases like GBIF using the spocc package (commented below), # but here we will load in some pre-downloaded data. # bv <- spocc::occ('Bradypus variegatus', 'gbif', limit=300, has_coords = TRUE) # occs <- as.data.frame(bv$gbif$data$Bradypus_variegatus[,2:3]) occs <- readRDS(\"bvariegatus.rds\")  # Removing occurrences that have the same coordinates is good practice to # avoid pseudoreplication. occs <- occs[!duplicated(occs),] # Download global raster data for bioclimatic variables from WorldClim 2.1, then # simplify their names and crop them to our extent of interest. # Find the descriptions of the bioclimatic variables here:  # https://www.worldclim.org/data/bioclim.html envs <- geodata::worldclim_global(var = \"bio\", res = 5, path = \".\") names(envs) <- paste(\"bio\", 1:19, sep = \"\") extent <- ext(-125, -32, -56, 40) envs <- crop(envs, extent) # Now we will remove those variables from consideration that have a high VIF. envs.vif <- usdm::vifstep(envs) envs.rem <- envs.vif@excluded envs <- envs[[!(names(envs) %in% envs.rem)]]  # Let's now remove occurrences that are cell duplicates -- these are # occurrences that share a grid cell in the predictor variable rasters. # Although Maxent does this by default, keep in mind that for other algorithms you may # or may not want to do this based on the aims of your study. # Another way to space occurrence records a defined distance from each other to avoid # spatial autocorrelation is with spatial thinning (Aiello-Lammens et al. 2015). occs.cells <- terra::extract(envs[[1]], occs, cellnumbers = TRUE, ID = FALSE) occs.cellDups <- duplicated(occs.cells[,1]) occs <- occs[!occs.cellDups,]  # Plot first raster in the stack, the mean annual temperature. plot(envs[[1]], main=\"Mean annual temperature\")  # Add points for all the occurrence points onto the raster. points(occs)  # There are some points east of the Amazon River. # Suppose we know this is a population that we don't want to include in the model. # We can remove these points from the analysis by subsetting the occurrences by  # latitude and longitude. occs <- filter(occs, latitude > -20, longitude < -45)  # Plot the subsetted occurrences to make sure we filtered correctly. points(occs) # First we extract the climatic variable values at the occurrence points --  # these values are our \"reference\". Let's first remove the occurrences with # NA values for our environmental variable rasters. occs.z <- terra::extract(envs, occs, ID = FALSE) occs.na <- which(rowSums(is.na(occs.z)) > 0) occs <- occs[-occs.na,] occs.z <- na.omit(occs.z) # Now we use the mess() function from the predicts pkg to calculate  # environmental similarity metrics of our predictor variable extent compared to  # the reference points. occs.mess <- predicts::mess(envs, occs.z) # This is the MESS plot -- increasingly negative values represent increasingly different  # climatic conditions from the reference (our occurrences), while increasingly positive  # values are more similar. plot(occs.mess, main = \"Environmental similarity\") points(occs) # We'll now experiment with a different spatial R package called sf (simple features). # Let's make our occs into a sf object -- as the coordinate reference system (crs) for these  # points is WGS84, a geographic crs (lat/lon) and the same as our envs rasters, we specify it  # as the SpatRaster's crs. occs.sf <- sf::st_as_sf(occs, coords = c(\"longitude\",\"latitude\"), crs = terra::crs(envs))  # Now, we project our point data to an equal-area projection, which converts our  # degrees to meters, which is ideal for buffering (the next step).  # We use the typical Eckert IV projection. eckertIV <- \"+proj=eck4 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\" occs.sf <- sf::st_transform(occs.sf, crs = eckertIV)  # Buffer all occurrences by 500 km, union the polygons together  # (for visualization), and convert back to a form that the terra package  # can use. Finally, we reproject the buffers back to WGS84 (lat/lon). # We choose 500 km here to avoid sampling the Caribbean islands. occs.buf <- sf::st_buffer(occs.sf, dist = 500000) |>    sf::st_union() |>    sf::st_sf() |>   sf::st_transform(crs = terra::crs(envs)) plot(envs[[1]], main = names(envs)[1]) points(occs) # To add sf objects to a plot, use add = TRUE plot(occs.buf, border = \"blue\", lwd = 3, add = TRUE) # Crop environmental rasters to match the study extent envs.bg <- terra::crop(envs, occs.buf) # Next, mask the rasters to the shape of the buffers envs.bg <- terra::mask(envs.bg, occs.buf) plot(envs.bg[[1]], main = names(envs)[1]) points(occs) plot(occs.buf, border = \"blue\", lwd = 3, add = TRUE) # Randomly sample 10,000 background points from one background extent raster  # (only one per cell without replacement).  bg <- terra::spatSample(envs.bg, size = 10000, na.rm = TRUE,                          values = FALSE, xy = TRUE) |> as.data.frame() colnames(bg) <- colnames(occs)  # Notice how we have pretty good coverage (every cell). plot(envs.bg[[1]]) points(bg, pch = 20, cex = 0.2)"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"partition","dir":"Articles","previous_headings":"","what":"Partitioning Occurrences for Evaluation","title":"ENMeval 2.0.5 Vignette","text":"run ENMevaluate begins using one seven methods partition occurrence localities validation training bins (folds) k-fold cross-validation (Fielding & Bell 1997, Hastie et al. 2009, Peterson et al. 2011). Data partitioning done internally ENMevaluate based user inputs partitions argument, can also done externally using partitioning functions. section, explain illustrate different functions. also demonstrate make informative plots partitions environmental similarity partitions background study extent. Spatial Block Spatial Checkerboard Spatial Hierarchical Checkerboard Jackknife (leave-one-) Random k-fold Fully Withheld Testing Data User first three partitioning methods variations Radosavljevic Anderson (2014) referred ‘masked geographically structured’ data partitioning. Basically, methods partition occurrence background records evaluation bins based spatial rules. intention reduce spatial-autocorrelation points included validation training bins, can overinflate model performance, least data sets result biased sampling (Veloz 2009, Wenger & Olden 2012, Roberts et al. 2017). spatial partitioning methods ENMs can found R package blockCV (Valavi et al. 2019), demonstrate use ENMeval.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"block","dir":"Articles","previous_headings":"Partitioning Occurrences for Evaluation","what":"1. Block","title":"ENMeval 2.0.5 Vignette","text":"First, ‘block’ method partitions data according latitude longitude lines divide occurrence localities four spatial groups equal numbers (close possible). occurrence background localities assigned four bins based position respect lines – first direction bisects points two groups, second direction bisects two groups , resulting four groups. resulting object list two vectors supply bin designation occurrence background point. ENMeval 2.0.x, users can additionally specify different orientations blocking orientation argument.","code":"block <- get.block(occs, bg, orientation = \"lat_lon\") # Let's make sure that we have an even number of occurrences in each partition. table(block$occs.grp) #>  #>  1  2  3  4  #> 45 44 45 44 # We can plot our partitions on one of our predictor variable rasters to visualize  # where they fall in space. # The ENMeval 2.0.x plotting functions use ggplot2 (Wickham 2016), a popular plotting  # package for R with many online resources. # We can add to the ggplots with other ggplot functions in an additive way, making  # these plots easily customizable. evalplot.grps(pts = occs, pts.grp = block$occs.grp, envs = envs.bg) +    ggplot2::ggtitle(\"Spatial block partitions: occurrences\") # PLotting the background shows that the background extent is partitioned in a way  # that maximizes evenness of points across the four bins, not to maximize evenness of area. evalplot.grps(pts = bg, pts.grp = block$bg.grp, envs = envs.bg) +    ggplot2::ggtitle(\"Spatial block partitions: background\") # If we are curious how different the environment associated with each partition is from  # that of all the others, we can use this function to plot histograms or rasters of MESS  # predictions with each partition as the reference. # First we need to extract the predictor variable values at our occurrence and  # background localities. occs.z <- cbind(occs, terra::extract(envs, occs, ID = FALSE)) bg.z <- cbind(bg, terra::extract(envs, bg, ID = FALSE)) evalplot.envSim.hist(occs.z = occs.z, bg.z = bg.z, occs.grp = block$occs.grp,                       bg.grp = block$bg.grp, ref.data = \"occs\") # Here we plot environmental similarity values for the entire extent with respect  # to each validation group. # We use the bb.buf (bounding box buffer) argument to zoom in to our study extent. evalplot.envSim.map(envs = envs, occs.z = occs.z, bg.z = bg.z,                      occs.grp = block$occs.grp, bg.grp = block$bg.grp,                      ref.data = \"occs\", bb.buf = 7)"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"cb1","dir":"Articles","previous_headings":"Partitioning Occurrences for Evaluation","what":"2. Basic checkerboard","title":"ENMeval 2.0.5 Vignette","text":"next two partitioning methods variants checkerboard approach partition occurrence localities (Radosavljevic & Anderson 2014). generate checkerboard grids across study extent partition localities groups based fall checkerboard. contrast block method, checkerboard methods subdivide geographic space equally ensure balanced number occurrence localities bin. methods, user needs provide raster layer base underlying checkerboard pattern. simply use predictor variable SpatRaster. Additionally, user needs define aggregation.factor. value specifies number grids cells aggregate making underlying checkerboard pattern. basic checkerboard method partitions points k = 2 spatial groups using simple checkerboard pattern.","code":"cb1 <- get.checkerboard(occs, envs.bg, bg, aggregation.factor = 25) evalplot.grps(pts = occs, pts.grp = cb1$occs.grp, envs = envs.bg) # Plotting the background points shows the checkerboard pattern clearly. evalplot.grps(pts = bg, pts.grp = cb1$bg.grp, envs = envs.bg) # We can see from the MESS maps that this method results in similar environmental  # representation between the partitions. evalplot.envSim.hist(occs.z = occs.z, bg.z = bg.z, occs.grp = cb1$occs.grp,                       bg.grp = cb1$bg.grp, ref.data = \"occs\") evalplot.envSim.map(envs = envs, occs.z = occs.z, bg.z = bg.z,                      occs.grp = cb1$occs.grp, bg.grp = cb1$bg.grp,                      ref.data = \"occs\", bb.buf = 7) # We can increase the aggregation factor to give the groups bigger boxes. # This can result in groups that are more environmentally different from each other. cb1.large <- get.checkerboard(occs, envs.bg, bg, aggregation.factor = 100) evalplot.grps(pts = occs, pts.grp = cb1.large$occs.grp, envs = envs.bg) evalplot.grps(pts = bg, pts.grp = cb1.large$bg.grp, envs = envs.bg) evalplot.envSim.hist(occs.z = occs.z, bg.z = bg.z,                       occs.grp = cb1.large$occs.grp, bg.grp = cb1$bg.grp,                       ref.data = \"occs\") evalplot.envSim.map(envs = envs, occs.z = occs.z, bg.z = bg.z,                      occs.grp = cb1.large$occs.grp, bg.grp = cb1$bg.grp,                      ref.data = \"occs\", bb.buf = 7)"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"cb2","dir":"Articles","previous_headings":"Partitioning Occurrences for Evaluation","what":"3. Hierarchical checkerboard","title":"ENMeval 2.0.5 Vignette","text":"hierarchical checkerboard method partitions data k = 4 spatial groups. done inputting two aggregation factors hierarchically aggregate input raster two scales. Presence background groups assigned based box fall hierarchical checkerboard.","code":"cb2 <- get.checkerboard(occs, envs.bg, bg, aggregation.factor = c(10,10)) evalplot.grps(pts = occs, pts.grp = cb2$occs.grp, envs = envs.bg) # Plotting the background points shows the checkerboard pattern very clearly. evalplot.grps(pts = bg, pts.grp = cb2$bg.grp, envs = envs.bg) # Different from basic checkerboard, some partitions here do show some difference # in environmental representation, but not as consistently different as with block. evalplot.envSim.hist(occs.z = occs.z, bg.z = bg.z, occs.grp = cb2$occs.grp,                       bg.grp = cb2$bg.grp, ref.data = \"occs\") evalplot.envSim.map(envs = envs, occs.z = occs.z, bg.z = bg.z,                      occs.grp = cb2$occs.grp, bg.grp = cb2$bg.grp,                      ref.data = \"occs\", bb.buf = 7)"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"jack","dir":"Articles","previous_headings":"Partitioning Occurrences for Evaluation","what":"4. Jackknife (leave-one-out)","title":"ENMeval 2.0.5 Vignette","text":"next two methods differ first three () partition background points different groups (meaning full background used evaluate partition), (b) account spatial autocorrelation validation training localities. Primarily working relatively small data sets (e.g. < ca. 25 presence localities), users may choose special case k-fold cross-validation number bins (k) equal number occurrence localities (n) data set (Pearson et al. 2007; Shcheglovitova & Anderson 2013). referred jackknife, leave-one-, partitioning (Hastie et al. 2009). n models processed partitioning method, computation time long large occurrence datasets.","code":"jack <- get.jackknife(occs, bg) # If the number of input points is larger than 10, the legend for the groups  # is suppressed. evalplot.grps(pts = occs, pts.grp = jack$occs.grp, envs = envs.bg)"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"rand","dir":"Articles","previous_headings":"Partitioning Occurrences for Evaluation","what":"5. Random k-fold","title":"ENMeval 2.0.5 Vignette","text":"‘random k-fold’ method partitions occurrence localities randomly user-specified number (k) bins (Hastie et al. 2009). method equivalent ‘cross-validate’ partitioning scheme available current version Maxent software GUI. Especially larger occurrence datasets, partitioning method randomly result spatial clustering groups, spatial partitioning methods preferable addressing spatial autocorrelation (Roberts et al. 2017). , partition data five random groups.","code":"rand <- get.randomkfold(occs, bg, k = 5) evalplot.grps(pts = occs, pts.grp = rand$occs.grp, envs = envs.bg) # As the partitions are random, there is no large environmental difference between them. evalplot.envSim.hist(occs.z = occs.z, bg.z = bg.z, occs.grp = rand$occs.grp,                       bg.grp = rand$bg.grp, ref.data = \"occs\") evalplot.envSim.map(envs = envs, occs.z = occs.z, bg.z = bg.z,                      occs.grp = rand$occs.grp, bg.grp = rand$bg.grp,                      ref.data = \"occs\", bb.buf = 7)"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"testing","dir":"Articles","previous_headings":"Partitioning Occurrences for Evaluation","what":"6. Fully Withheld Testing Data","title":"ENMeval 2.0.5 Vignette","text":"‘testing’ method evaluates model fully withheld testing dataset used create full model (.e., included training data), meaning cross validation statistics calculated. Evaluations fully withheld testing data shown result models better transferability (Soley-Guardia et al. 2019). illustrate , make table containing occurrences representing training data fully withheld testing data (simulate) plot partitions way . However, testing data (group 2) become training data new model. Instead, training data (group 1) used make model, testing data (group 2) used evaluate . Thus, background extent include testing data (points fall inside extent buffer applied, used training data).","code":"# First, let's specify a fake testing occurrence dataset and plot the testing points with  # the rest of our data occs.testing <- data.frame(longitude = -runif(10, 55, 65), latitude = runif(10, -10, 0)) evalplot.grps(pts = rbind(occs, occs.testing),                pts.grp = c(rep(1, nrow(occs)), rep(2, nrow(occs.testing))), envs = envs.bg) # Next, let's extract the predictor variable values for our testing points. occs.testing.z <- cbind(occs.testing, terra::extract(envs, occs.testing, ID = FALSE)) # We use the same background groups as random partitions here because the background used  # for testing data is also from the full study extent. We use here the occs.testing.z  # parameter to add information for our testing localities, and we set the partitions  # for occurrences all to zero (as no partitioning is done). evalplot.envSim.hist(occs.z = occs.z, bg.z = bg.z,                       occs.grp = rep(0, nrow(occs)), bg.grp = rand$bg.grp,                       ref.data = \"occs\", occs.testing.z = occs.testing.z) evalplot.envSim.map(envs = envs, occs.z = occs.z,                      bg.z = bg.z, occs.grp = rep(0, nrow(occs)),                      bg.grp = rand$bg.grp, bb.buf = 7,                      ref.data = \"occs\", occs.testing.z = occs.testing.z) # We can see what is to be expected -- the testing dataset is much more restricted  # environmentally than the training data, and thus is much more difference with the  # study extent."},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"user","dir":"Articles","previous_headings":"Partitioning Occurrences for Evaluation","what":"7. User-defined","title":"ENMeval 2.0.5 Vignette","text":"maximum flexibility, last partitioning method designed users can define priori partitions. provides flexible way conduct spatially-independent cross-validation background masking. example, demonstrate partitioning occurrence data based k-means groups. user-defined partition option can also used input partition groups derived sources.  using user-defined partitioning method, need supply ENMevaluate group identifiers occurrence background records want use background records group, can set background zero.  Alternatively, may think various ways partition background data. depends goals study might, example, find reasonable partition background records assigning groups based distance centroids occurrence clusters.  can also use packages partition data. example, next show use R package blockCV (Valavi et al. 2019) generate spatial partitions input ENMevaluate. use spatialBlock function generate blocks similar checkerboard partition ENMeval, except choose select partitions randomly blocks. package offers kinds block partitioning methods well. Using packages way expands variety partitions can use evaluate models ENMeval, highly encourage experimenting plurality tools.   Selecting data partitioning methods use based research objectives characteristics study system. Refer References Resources section studies resources consult information concerning partitioning model evaluation.","code":"# Here we run a k-means clustering algorithm to group our occurrences into discrete spatial  # groups based on their coordinates. grp.n <- 6 kmeans <- kmeans(occs, grp.n) occs.grp <- kmeans$cluster evalplot.grps(pts = occs, pts.grp = occs.grp, envs = envs.bg) # Assign all background records bg.grp <- rep(0, nrow(bg)) evalplot.grps(pts = bg, pts.grp = bg.grp, envs = envs.bg) # Here we find the centers of the occurrence k-means clusters and calculate the spatial  # distance of each background point to them. We then find which center had the minimum  # distance for each record and assign that record to this centroid group. centers <- kmeans$center d <- terra::distance(as.matrix(bg), centers, lonlat = TRUE) bg.grp <- apply(d, 1, function(x) which(x == min(x))) evalplot.grps(pts = bg, pts.grp = bg.grp, envs = envs.bg) # First, we convert our occurrence and background records to spatial point data with the  # package sf and assign the correct coordinate reference system. occsBg.sf <- sf::st_as_sf(rbind(occs, bg), coords = c(\"longitude\",\"latitude\"),                            crs = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\") terra::crs(envs.bg) <- terra::crs(occsBg.sf) # Here, we implement the spatialBlock function from the blockCV package. # The required inputs are similar to ENMeval partitioning functions, but here you assign # the size of blocks in meters with the argument theRange (here set at 1000 km), and the  # partition selection method can be assigned as either \"checkerboard\" or \"random\" # In addition, the spatialBlock function returns a map showing the different  # spatial partitions. sb <- blockCV::cv_spatial(x = occsBg.sf, r = envs.bg, k = 5,                              size = 1000000, selection = \"random\") #>   |                                                                              |                                                                      |   0%  |                                                                              |=                                                                     |   1%  |                                                                              |=                                                                     |   2%  |                                                                              |==                                                                    |   3%  |                                                                              |===                                                                   |   4%  |                                                                              |====                                                                  |   5%  |                                                                              |====                                                                  |   6%  |                                                                              |=====                                                                 |   7%  |                                                                              |======                                                                |   8%  |                                                                              |======                                                                |   9%  |                                                                              |=======                                                               |  10%  |                                                                              |========                                                              |  11%  |                                                                              |========                                                              |  12%  |                                                                              |=========                                                             |  13%  |                                                                              |==========                                                            |  14%  |                                                                              |==========                                                            |  15%  |                                                                              |===========                                                           |  16%  |                                                                              |============                                                          |  17%  |                                                                              |=============                                                         |  18%  |                                                                              |=============                                                         |  19%  |                                                                              |==============                                                        |  20%  |                                                                              |===============                                                       |  21%  |                                                                              |===============                                                       |  22%  |                                                                              |================                                                      |  23%  |                                                                              |=================                                                     |  24%  |                                                                              |==================                                                    |  25%  |                                                                              |==================                                                    |  26%  |                                                                              |===================                                                   |  27%  |                                                                              |====================                                                  |  28%  |                                                                              |====================                                                  |  29%  |                                                                              |=====================                                                 |  30%  |                                                                              |======================                                                |  31%  |                                                                              |======================                                                |  32%  |                                                                              |=======================                                               |  33%  |                                                                              |========================                                              |  34%  |                                                                              |========================                                              |  35%  |                                                                              |=========================                                             |  36%  |                                                                              |==========================                                            |  37%  |                                                                              |===========================                                           |  38%  |                                                                              |===========================                                           |  39%  |                                                                              |============================                                          |  40%  |                                                                              |=============================                                         |  41%  |                                                                              |=============================                                         |  42%  |                                                                              |==============================                                        |  43%  |                                                                              |===============================                                       |  44%  |                                                                              |================================                                      |  45%  |                                                                              |================================                                      |  46%  |                                                                              |=================================                                     |  47%  |                                                                              |==================================                                    |  48%  |                                                                              |==================================                                    |  49%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================                                  |  51%  |                                                                              |====================================                                  |  52%  |                                                                              |=====================================                                 |  53%  |                                                                              |======================================                                |  54%  |                                                                              |======================================                                |  55%  |                                                                              |=======================================                               |  56%  |                                                                              |========================================                              |  57%  |                                                                              |=========================================                             |  58%  |                                                                              |=========================================                             |  59%  |                                                                              |==========================================                            |  60%  |                                                                              |===========================================                           |  61%  |                                                                              |===========================================                           |  62%  |                                                                              |============================================                          |  63%  |                                                                              |=============================================                         |  64%  |                                                                              |==============================================                        |  65%  |                                                                              |==============================================                        |  66%  |                                                                              |===============================================                       |  67%  |                                                                              |================================================                      |  68%  |                                                                              |================================================                      |  69%  |                                                                              |=================================================                     |  70%  |                                                                              |==================================================                    |  71%  |                                                                              |==================================================                    |  72%  |                                                                              |===================================================                   |  73%  |                                                                              |====================================================                  |  74%  |                                                                              |====================================================                  |  75%  |                                                                              |=====================================================                 |  76%  |                                                                              |======================================================                |  77%  |                                                                              |=======================================================               |  78%  |                                                                              |=======================================================               |  79%  |                                                                              |========================================================              |  80%  |                                                                              |=========================================================             |  81%  |                                                                              |=========================================================             |  82%  |                                                                              |==========================================================            |  83%  |                                                                              |===========================================================           |  84%  |                                                                              |============================================================          |  85%  |                                                                              |============================================================          |  86%  |                                                                              |=============================================================         |  87%  |                                                                              |==============================================================        |  88%  |                                                                              |==============================================================        |  89%  |                                                                              |===============================================================       |  90%  |                                                                              |================================================================      |  91%  |                                                                              |================================================================      |  92%  |                                                                              |=================================================================     |  93%  |                                                                              |==================================================================    |  94%  |                                                                              |==================================================================    |  95%  |                                                                              |===================================================================   |  96%  |                                                                              |====================================================================  |  97%  |                                                                              |===================================================================== |  98%  |                                                                              |===================================================================== |  99%  |                                                                              |======================================================================| 100% #>   train test #> 1  8055 2123 #> 2  8170 2008 #> 3  8334 1844 #> 4  7893 2285 #> 5  8260 1918 # We can pull out the partition information from the SpatialBlock object to assemble # occs.grp and bg.grp, which can be used for plotting or as user.grp inputs for ENMevaluate. occs.grp <- sb$folds_ids[1:nrow(occs)] bg.grp <- sb$folds_ids[(nrow(occs)+1):length(sb$folds_ids)] evalplot.grps(pts = bg, pts.grp = bg.grp, envs = envs.bg)"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"eval","dir":"Articles","previous_headings":"","what":"Running ENMeval","title":"ENMeval 2.0.5 Vignette","text":"decide method data partitioning like use, ready start building models. now move main function ENMeval: ENMevaluate.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"initial-considerations","dir":"Articles","previous_headings":"Running ENMeval","what":"Initial considerations","title":"ENMeval 2.0.5 Vignette","text":"Although algorithm can potentially specified ENMeval 2.0.x (see ), package built-implementations Maxent BIOCLIM, explain tuning procedure Maxent models (either maxent.jar maxnet). Maxent models (Phillips et al. 2006, Phillips et al. 2008, Phillips et al. 2017), two main parameters tune calling ENMevaluate (1) range regularization multiplier values (2) combinations feature classes (Elith et al. 2011, Merow et al. 2013). regularization multiplier (RM) determines penalty associated including variables transformations model. Higher RM values impose stronger penalty model complexity thus result simpler (flatter) model predictions. feature classes determine potential shape marginal response curves. model allowed include linear feature classes likely simpler model allowed include possible feature classes. detailed description parameters available References Resources section. purposes vignette, demonstrate simply adjust parameters. following section deals comparing outputs model. Unless supply function background points (recommended many cases), need define many background points used n.bg argument. predictor variables categorical (e.g., like “biomes” variable initially removed dataset), define layer(s) using ‘categoricals’ argument assign factors SpatRaster input table. ENMevaluate builds separate model unique combination RM values feature class combinations. example, following call build evaluate 2 models. One RM=1 another RM=2, allowing linear features. may, however, want compare wider range models can use wider variety feature classes regularization multipliers: building many models, function may take long time run. course depends size dataset computer using. working big projects, running command parallel (parallel = TRUE) can considerably faster. Note running parallel can also slower working small datasets. can also calculate one two niche overlap statistics running ENMevaluate setting arguments overlap = TRUE overlapStat, support Moran’s Schoener’s D (Warren et al. 2008). Note can also calculate value later stage using separate calc.niche.overlap function.","code":"e.mx.l <- ENMevaluate(occs = occs, envs = envs, bg = bg,                        algorithm = 'maxnet', partitions = 'block',                        tune.args = list(fc = \"L\", rm = 1:2)) e.mx.l #> An object of class:  ENMevaluation  #>  occurrence/background points:  178 / 10000  #>  partition method:  block  #>  partition settings:  orientation = lat_lon  #>  clamp:  left: bio2, bio3, bio5, bio8, bio9, bio13, bio14, bio15, bio18, bio19 #>          right: bio2, bio3, bio5, bio8, bio9, bio13, bio14, bio15, bio18, bio19  #>  categoricals:    #>  algorithm:  maxnet  #>  tune settings:  fc: L #>                  rm: 1,2  #>  overlap:  TRUE  #> Refer to ?ENMevaluation for information on slots. tune.args <- list(fc = c(\"L\",\"LQ\",\"LQH\"), rm = 1:5) e.mx <- ENMevaluate(occs = occs, envs = envs, bg = bg,                      algorithm = 'maxnet', partitions = 'block',                      tune.args = tune.args) e.mx #> An object of class:  ENMevaluation  #>  occurrence/background points:  178 / 10000  #>  partition method:  block  #>  partition settings:  orientation = lat_lon  #>  clamp:  left: bio2, bio3, bio5, bio8, bio9, bio13, bio14, bio15, bio18, bio19 #>          right: bio2, bio3, bio5, bio8, bio9, bio13, bio14, bio15, bio18, bio19  #>  categoricals:    #>  algorithm:  maxnet  #>  tune settings:  fc: L,LQ,LQH #>                  rm: 1,2,3,4,5  #>  overlap:  TRUE  #> Refer to ?ENMevaluation for information on slots. overlap <- calc.niche.overlap(e.mx@predictions, overlapStat = \"D\") overlap[1:5,1:5] #>             fc.L_rm.1 fc.LQ_rm.1 fc.LQH_rm.1 fc.L_rm.2 fc.LQ_rm.2 #> fc.L_rm.1          NA         NA          NA        NA         NA #> fc.LQ_rm.1  0.8887215         NA          NA        NA         NA #> fc.LQH_rm.1 0.4973815  0.5120040          NA        NA         NA #> fc.L_rm.2   0.9682736  0.8758681   0.5027874        NA         NA #> fc.LQ_rm.2  0.9173979  0.9567198   0.5100648 0.9108483         NA"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"different-parameterizations","dir":"Articles","previous_headings":"Running ENMeval","what":"Different parameterizations","title":"ENMeval 2.0.5 Vignette","text":"multiple ways run function ENMevaluate, go specify parameterization effects results. can also specify custom validation statistics ENMevaluate calculate report results tables. done defining custom function arguments shown , used internal function tune.validate. , add functionality calculate AUC ratio associated p-value partial ROC perfomance metric, defined (Peterson et al. 2008) implemented R package kuenm (Cobos et al. 2019), currently available Github. can see new performance statistic averages results slot. Notice model settings NA values validation statistics – one models NULL built cross-validation. case, means training data used model (missing withheld fold) may provided insufficient information model convergence given assigned settings. cross-validation methods might result fewer model errors partition data differently. see model performance folds, look results.partitions slot. Yet another way run ENMevaluate specifying new algorithm using ENMdetails object. Built-algorithms (maxent.jar, maxnet, BIOCLIM) implemented ENMdetails objects—can found /R folder package file name “enm.name”, “name” algorithm. ENMdetails object specifies way ENMevaluate run algorithm. simple functions output 1) algorithm’s name, 2) function runs algorithm, 3) particular messages errors, 4) arguments model’s function, 5) specific parameterization predict function, 6) number non-zero model coefficients, 7) variable importance table (one available model object). Users can construct ENMdetails object using built-ones guides. example, user can copy “enm.maxnet.R” script, modify code specify different model, save new script /R folder name “enm.myAlgorithm”, use run ENMevaluate. able specify model algorithm argument ENMevaluate, small modification needs made add list lookup.enm internal function found “R/utilities.R”. plan work research groups identify best practices tuning algorithms presence-background/pseudoabsence data implement new algorithms ENMeval future.","code":"# If maxent.jar is installed and rJava loads properly, you can also run Maxent with  # the original Java software. e.mxjar <- ENMevaluate(occs, envs, bg, algorithm = \"maxent.jar\",                         tune.args = tune.args, partitions = \"block\")  # 2. Testing partition: no cross validation statistics calculated; instead, model will be  # evaluated on a testing dataset that is not used to create the full model. e.test <- ENMevaluate(occs, envs, bg, algorithm = \"maxnet\",                        tune.args = tune.args, partitions = \"testing\",                        occs.testing = occs.testing)  # 3. User partitions. user.grp <- list(occs.grp = round(runif(nrow(occs), 1, 2)),                   bg.grp = round(runif(nrow(bg), 1, 2))) e.user <- ENMevaluate(occs, envs, bg, algorithm = \"maxnet\",                        tune.args = tune.args, partitions = \"user\",                        user.grp = user.grp)  # 4. No partitions: no cross validation statistics calculated, nor any model  # evaluation on test data. e.noCV <- ENMevaluate(occs, envs, bg, algorithm = \"maxnet\",                        tune.args = tune.args, partitions = \"none\")  # 5. No raster data (a.k.a, samples with data, or SWD): no full model raster predictions  # created, so will run faster; also, both cbi.train and cbi.val will be calculated on the  # point data (training and validation background) instead of on the \"envs\" rasters (default). # For this implementation, assigning categorical variables to factor with the argument  # \"categoricals\" is easier, as ENMevaluate internally assigns the levels based on both  # occs and bg, avoiding any errors associated with different factor levels when combining data. occs.z <- cbind(occs, terra::extract(envs, occs, ID = FALSE)) bg.z <- cbind(bg, terra::extract(envs, bg, ID = FALSE)) e.swd <- ENMevaluate(occs.z, bg = bg.z, algorithm = \"maxnet\",                       tune.args = tune.args, partitions = \"block\") # First, make sure you install kuenm from Github. devtools::install_github(\"marlonecobos/kuenm\") # Define a custom function that implements a performance metric not included in ENMeval. # The function should have a single argument \"vars\", which is a list that includes the  # data most performance metrics should require -- the total list of these data can be found  # here: ?ENMevaluate. Make sure you return a data frame that specifies the names you want to  # see in the results tables. pROC <- function(vars) {   pROC <- kuenm::kuenm_proc(vars$occs.val.pred, c(vars$bg.train.pred, vars$bg.val.pred))   out <- data.frame(pROC_auc_ratio = pROC$pROC_summary[1],                      pROC_pval = pROC$pROC_summary[2], row.names = NULL)   return(out) }  # Now we can run ENMevaluate with the argument \"user.eval\", and simply give it the  # custom function. e.mx.proc <- ENMevaluate(occs, envs, bg, algorithm = \"maxnet\",                           tune.args = list(fc = \"L\", rm = 1:2),                           partitions = \"block\", user.eval = pROC) e.mx.proc@results #>   fc rm tune.args auc.train cbi.train auc.diff.avg auc.diff.sd auc.val.avg #> 1  L  1 fc.L_rm.1 0.8171632     0.974    0.1344515  0.07337408   0.7261343 #> 2  L  2 fc.L_rm.2 0.8151969     0.974    0.1344432  0.07131803   0.7244877 #>   auc.val.sd cbi.val.avg cbi.val.sd or.10p.avg or.10p.sd or.mtp.avg  or.mtp.sd #> 1  0.1376539     0.49125  0.2525079  0.2887626 0.2625836 0.02840909 0.05681818 #> 2  0.1380480     0.49400  0.2689151  0.2832071 0.2659283 0.03396465 0.05413767 #>   pROC_auc_ratio.avg pROC_auc_ratio.sd pROC_pval.avg pROC_pval.sd     AICc #> 1           1.352866        0.08888786             0            0 3943.051 #> 2           1.340255        0.08319455             0            0 3948.874 #>   delta.AICc      w.AIC ncoef #> 1   0.000000 0.94841315     9 #> 2   5.823047 0.05158685     7 e.mx.proc@results.partitions #>   tune.args fold   auc.val   auc.diff cbi.val     or.mtp    or.10p #> 1 fc.L_rm.1    1 0.8886724 0.10205778   0.507 0.00000000 0.0000000 #> 2 fc.L_rm.1    2 0.5524341 0.24397306   0.161 0.11363636 0.6136364 #> 3 fc.L_rm.1    3 0.7218896 0.10402928   0.776 0.00000000 0.1777778 #> 4 fc.L_rm.1    4 0.7415412 0.08774573   0.521 0.00000000 0.3636364 #> 5 fc.L_rm.2    1 0.8901724 0.10232752   0.451 0.00000000 0.0000000 #> 6 fc.L_rm.2    2 0.5533381 0.24070570   0.153 0.11363636 0.6136364 #> 7 fc.L_rm.2    3 0.7128467 0.10703374   0.798 0.02222222 0.1555556 #> 8 fc.L_rm.2    4 0.7415937 0.08770597   0.574 0.00000000 0.3636364 #>   pROC_auc_ratio pROC_pval #> 1       1.423958         0 #> 2       1.248994         0 #> 3       1.429764         0 #> 4       1.308749         0 #> 5       1.426639         0 #> 6       1.245932         0 #> 7       1.390987         0 #> 8       1.297462         0"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"exploring-the-results","dir":"Articles","previous_headings":"Running ENMeval","what":"Exploring the results","title":"ENMeval 2.0.5 Vignette","text":"Now let’s take look output ENMevaluate, ENMevaluation object, detail (also see ?ENMevaluation). contains following slots: algorithm character vector showing algorithm used tune.settings data.frame settings tuned partition.method character partitioning method used partition.settings list partition settings used (.e., value k aggregation factor) .settings list modeling settings used (.e., decisions clamping, AUC diff calculation) doClamp logical indicating whether clamping used clamp.directions list clamping directions specified results data.frame evaluation summary statistics results.partitions data.frame evaluation k-fold statistics models list model objects variable.importance list data frames variable importance model (applicable) predictions SpatRaster model predictions taxon.name character taxon name (specified) occs data frame occurrence record coordinates used model training occs.testing data frame coordinates fully withheld testing records (specified) occs.grp vector partition groups occurrence records bg data frame background record coordinates used model training bg.grp vector partition groups background records overlap list matrices pairwise niche overlap statistics rmm list rangeModelMetadata objects model Let’s first examine structure object. can use helper functions access slots ENMevaluation object. Maxent models run maxent.jar different structure models run maxnet, demonstration extract “betas” information maxent.jar models. case user can run maxent.jar, please run lines independently. many users issues running Java version Maxent, portion automatically evaluated vignette avoid R Markdown knitting errors.","code":"e.mx #> An object of class:  ENMevaluation  #>  occurrence/background points:  178 / 10000  #>  partition method:  block  #>  partition settings:  orientation = lat_lon  #>  clamp:  left: bio2, bio3, bio5, bio8, bio9, bio13, bio14, bio15, bio18, bio19 #>          right: bio2, bio3, bio5, bio8, bio9, bio13, bio14, bio15, bio18, bio19  #>  categoricals:    #>  algorithm:  maxnet  #>  tune settings:  fc: L,LQ,LQH #>                  rm: 1,2,3,4,5  #>  overlap:  TRUE  #> Refer to ?ENMevaluation for information on slots. # Simplify the summary to look at higher level items. str(e.mx, max.level=2) #> Formal class 'ENMevaluation' [package \"ENMeval\"] with 20 slots #>   ..@ algorithm          : chr \"maxnet\" #>   ..@ tune.settings      :'data.frame':  15 obs. of  3 variables: #>   .. ..- attr(*, \"out.attrs\")=List of 2 #>   ..@ partition.method   : chr \"block\" #>   ..@ partition.settings :List of 1 #>   ..@ other.settings     :List of 7 #>   ..@ doClamp            : logi TRUE #>   ..@ clamp.directions   :List of 2 #>   ..@ results            :'data.frame':  15 obs. of  19 variables: #>   .. ..- attr(*, \"out.attrs\")=List of 2 #>   ..@ results.partitions :'data.frame':  60 obs. of  7 variables: #>   ..@ models             :List of 15 #>   ..@ variable.importance:List of 15 #>   ..@ predictions        :S4 class 'SpatRaster' [package \"terra\"] #>   ..@ taxon.name         : chr \"\" #>   ..@ occs               :'data.frame':  178 obs. of  12 variables: #>   ..@ occs.testing       :'data.frame':  0 obs. of  0 variables #>   ..@ occs.grp           : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 3 3 3 1 1 1 4 4 3 1 ... #>   ..@ bg                 :'data.frame':  10000 obs. of  12 variables: #>   ..@ bg.grp             : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 2 2 2 2 2 2 2 2 2 2 ... #>   ..@ overlap            : list() #>   ..@ rmm                :List of 8 #>   .. ..- attr(*, \"class\")= chr [1:2] \"list\" \"RMM\" # Access algorithm, tuning settings, and partition method information. eval.algorithm(e.mx) #> [1] \"maxnet\" eval.tune.settings(e.mx) |> head() #>    fc rm   tune.args #> 1   L  1   fc.L_rm.1 #> 2  LQ  1  fc.LQ_rm.1 #> 3 LQH  1 fc.LQH_rm.1 #> 4   L  2   fc.L_rm.2 #> 5  LQ  2  fc.LQ_rm.2 #> 6 LQH  2 fc.LQH_rm.2 eval.partition.method(e.mx) #> [1] \"block\" # Results table with summary statistics for cross validation on test data. eval.results(e.mx) |> head() #>    fc rm   tune.args auc.train cbi.train auc.diff.avg auc.diff.sd auc.val.avg #> 1   L  1   fc.L_rm.1 0.8171632     0.974   0.13445146  0.07337408   0.7261343 #> 2  LQ  1  fc.LQ_rm.1 0.8370413     0.976   0.12736855  0.09499498   0.7434951 #> 3 LQH  1 fc.LQH_rm.1 0.9150306     0.970   0.08607102  0.11826192   0.8111343 #> 4   L  2   fc.L_rm.2 0.8151969     0.974   0.13444323  0.07131803   0.7244877 #> 5  LQ  2  fc.LQ_rm.2 0.8329256     0.973   0.11932791  0.07414506   0.7471441 #> 6 LQH  2 fc.LQH_rm.2 0.8822739     0.938   0.09416783  0.12007184   0.7887931 #>   auc.val.sd cbi.val.avg cbi.val.sd or.10p.avg or.10p.sd or.mtp.avg  or.mtp.sd #> 1  0.1376539     0.49125  0.2525079  0.2887626 0.2625836 0.02840909 0.05681818 #> 2  0.1438563     0.56900  0.3275352  0.2611111 0.2980209 0.05113636 0.05977172 #> 3  0.1338383     0.66400  0.2196315  0.2320707 0.1932193 0.03977273 0.05370245 #> 4  0.1380480     0.49400  0.2689151  0.2832071 0.2659283 0.03396465 0.05413767 #> 5  0.1359330     0.59425  0.2781503  0.2497475 0.2859188 0.05681818 0.06560799 #> 6  0.1438574     0.61900  0.3072599  0.2148990 0.1841122 0.05113636 0.07509177 #>       AICc delta.AICc        w.AIC ncoef #> 1 3943.051   134.4705 6.310939e-30     9 #> 2 3913.348   104.7671 1.778705e-23    11 #> 3 4211.406   402.8254 3.369555e-88    43 #> 4 3948.874   140.2936 3.432697e-31     7 #> 5 3926.884   118.3040 2.044663e-26    12 #> 6 3808.580     0.0000 1.000000e+00    27 # Results table with cross validation statistics for each test partition. eval.results.partitions(e.mx) |> head() #>    tune.args fold   auc.val   auc.diff cbi.val    or.mtp    or.10p #> 1  fc.L_rm.1    1 0.8886724 0.10205778   0.507 0.0000000 0.0000000 #> 2  fc.L_rm.1    2 0.5524341 0.24397306   0.161 0.1136364 0.6136364 #> 3  fc.L_rm.1    3 0.7218896 0.10402928   0.776 0.0000000 0.1777778 #> 4  fc.L_rm.1    4 0.7415412 0.08774573   0.521 0.0000000 0.3636364 #> 5 fc.LQ_rm.1    1 0.8951549 0.09341583   0.687 0.0000000 0.0000000 #> 6 fc.LQ_rm.1    2 0.5609192 0.25051006   0.082 0.1136364 0.6363636 # List of models with names corresponding to tune.args column label. eval.models(e.mx) |> str(max.level = 1) #> List of 15 #>  $ fc.L_rm.1  :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQ_rm.1 :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQH_rm.1:List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.L_rm.2  :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQ_rm.2 :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQH_rm.2:List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.L_rm.3  :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQ_rm.3 :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQH_rm.3:List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.L_rm.4  :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQ_rm.4 :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQH_rm.4:List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.L_rm.5  :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQ_rm.5 :List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" #>  $ fc.LQH_rm.5:List of 23 #>   ..- attr(*, \"class\")= chr [1:3] \"maxnet\" \"lognet\" \"glmnet\" # The \"betas\" slot in a maxnet model is a named vector of the variable  # coefficients and what kind they are (in R formula notation). # Note that the html file that is created when maxent.jar is run is **not** kept. m1.mx <- eval.models(e.mx)[[\"fc.LQH_rm.1\"]] m1.mx$betas #>                                           bio2  #>                                  -1.300772e-01  #>                                          bio13  #>                                   1.567920e-02  #>                                          bio14  #>                                  -3.408800e-03  #>                                          bio15  #>                                  -1.047407e-02  #>                                          bio18  #>                                   4.783857e-04  #>                                          bio19  #>                                   5.045810e-04  #>                                      I(bio3^2)  #>                                  -5.605024e-04  #>                                      I(bio5^2)  #>                                  -8.933996e-05  #>                                      I(bio9^2)  #>                                  -2.114426e-03  #>  hinge(bio2):10.3210696200935:18.9859161376953  #>                                  -1.663205e+00  #>  hinge(bio2):10.6098978373469:18.9859161376953  #>                                  -2.082817e+00  #>  hinge(bio2):4.83333349227905:8.58810031657316  #>                                  -1.580067e+00  #>  hinge(bio3):88.9814825252611:94.3169937133789  #>                                   1.123558e+00  #>  hinge(bio3):90.0485847628846:94.3169937133789  #>                                   2.667189e+00  #>  hinge(bio3):92.1827892381318:94.3169937133789  #>                                  -2.634117e-01  #>  hinge(bio3):42.0289840698242:67.6394377727898  #>                                  -1.298906e+01  #>  hinge(bio3):42.0289840698242:76.1762556737783  #>                                   1.381063e+01  #>   hinge(bio5):32.091081969592:37.1590003967285  #>                                  -3.393143e+00  #>  hinge(bio5):6.11800003051758:25.1226941322794  #>                                   7.683829e+00  #>  hinge(bio8):25.4872614485877:29.4118328094482  #>                                   4.599610e-01  #>  hinge(bio8):26.0479145001392:29.4118328094482  #>                                   4.394250e+00  #>  hinge(bio8):27.7298736547937:29.4118328094482  #>                                  -4.326107e+00  #>              hinge(bio13):447.448979591837:877  #>                                  -5.871009e+00  #>                hinge(bio13):0:196.877551020408  #>                                   8.887840e-01  #>                hinge(bio13):0:214.775510204082  #>                                   1.749113e+00  #>                hinge(bio13):0:304.265306122449  #>                                  -7.253474e+00  #>              hinge(bio14):129.469387755102:488  #>                                  -7.833881e-02  #>              hinge(bio14):139.428571428571:488  #>                                  -1.871329e+00  #>                hinge(bio14):0:29.8775510204082  #>                                  -1.441614e-01  #>                hinge(bio14):0:59.7551020408163  #>                                  -1.069372e+00  #> hinge(bio15):69.9453473772321:201.607177734375  #>                                  -6.670763e-01  #>                hinge(bio15):0:20.5721609933036  #>                                   6.341525e+00  #>                hinge(bio15):0:41.1443219866071  #>                                  -1.084412e+00  #>             hinge(bio18):728.571428571429:1700  #>                                  -1.210289e+00  #>             hinge(bio18):1110.20408163265:1700  #>                                  -1.383907e+00  #>                hinge(bio18):0:312.244897959184  #>                                   5.003381e+00  #>             hinge(bio19):847.755102040816:2077  #>                                  -7.545615e-01  #>             hinge(bio19):1017.30612244898:2077  #>                                  -2.389713e+00  #>             hinge(bio19):1059.69387755102:2077  #>                                  -2.880705e-02  #>                hinge(bio19):0:42.3877551020408  #>                                   1.632038e+00  #>                hinge(bio19):0:169.551020408163  #>                                  -1.410946e-01  #>                hinge(bio19):0:254.326530612245  #>                                  -4.644699e-01  #>                 hinge(bio19):0:508.65306122449  #>                                   1.112090e+00 # the enframe function from the tibble package makes this named vector into a  # more readable table. tibble::enframe(m1.mx$betas) #> # A tibble: 43 × 2 #>    name                                               value #>    <chr>                                              <dbl> #>  1 bio2                                          -0.130     #>  2 bio13                                          0.0157    #>  3 bio14                                         -0.00341   #>  4 bio15                                         -0.0105    #>  5 bio18                                          0.000478  #>  6 bio19                                          0.000505  #>  7 I(bio3^2)                                     -0.000561  #>  8 I(bio5^2)                                     -0.0000893 #>  9 I(bio9^2)                                     -0.00211   #> 10 hinge(bio2):10.3210696200935:18.9859161376953 -1.66      #> # ℹ 33 more rows # SpatRaster of model predictions (for extent of \"envs\") with names corresponding  # to tune.args column label. eval.predictions(e.mx) #> class       : SpatRaster  #> dimensions  : 1152, 1116, 15  (nrow, ncol, nlyr) #> resolution  : 0.08333333, 0.08333333  (x, y) #> extent      : -125, -32, -56, 40  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> names       :    fc.L_rm.1,   fc.LQ_rm.1,  fc.LQH_rm.1,    fc.L_rm.2,  fc.LQ_rm.2,  fc.LQH_rm.2, ...  #> min values  : 2.746611e-06, 1.631124e-07, 1.242599e-08, 5.174928e-06, 3.58231e-06, 6.638164e-08, ...  #> max values  : 1.000000e+00, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1.00000e+00, 1.000000e+00, ... # Original occurrence data coordinates with associated predictor variable values. eval.occs(e.mx) |> head() #>   longitude  latitude     bio2     bio3     bio5     bio8     bio9 bio13 bio14 #> 1 -84.67201 10.478622 8.911917 77.36711 28.90700 22.62117 23.33933   416    92 #> 2 -84.62746 10.484519 9.172584 77.59566 31.44800 25.05200 25.75983   436    86 #> 3 -84.79254 10.347512 8.884500 76.11806 26.10200 19.50133 20.42650   407    72 #> 4 -76.79294  8.433710 7.091402 90.98947 30.52699 26.76349 26.80582   258    48 #> 5 -80.12543  8.610270 7.598667 81.98820 27.96900 22.59417 23.11900   350    31 #> 6 -79.55048  8.952963 6.787727 77.42120 31.50546 26.31576 27.24939   375    20 #>      bio15 bio18 bio19 #> 1 39.80974   448  1017 #> 2 44.78418   427   852 #> 3 43.76931   424   888 #> 4 47.05595   455   609 #> 5 55.86419   452   894 #> 6 66.06547   252   985 # Background data coordinates with associated predictor variable values. eval.bg(e.mx) |> head() #>       longitude   latitude      bio2     bio3   bio5     bio8     bio9 bio13 #> 11000 -68.20833  -4.625000  9.026417 82.53855 31.561 26.18217 25.67600   323 #> 21000 -69.12500  -8.791667 11.760584 78.68716 31.416 25.33333 23.58117   340 #> 31000 -70.54167 -13.125000  9.978250 75.81680 29.721 23.88500 22.62383   820 #> 41000 -63.87500 -20.791667 12.256917 58.70452 32.026 25.06850 20.10700   135 #> 51000 -63.20833  -9.208333 11.365750 71.17384 33.138 25.59017 24.89717   377 #> 61000 -62.45833  -2.625000  8.681084 88.57346 31.400 26.23833 26.32333   321 #>       bio14    bio15 bio18 bio19 #> 11000   104 31.34519   597   480 #> 21000    40 55.14707   898   172 #> 31000   256 42.86143  1598   846 #> 41000     3 82.63156   311    54 #> 51000    11 68.50643   508   170 #> 61000   127 30.23508   587   654 # Partition group assignments for occurrence data. eval.occs.grp(e.mx) |> str() #>  Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 3 3 3 1 1 1 4 4 3 1 ... # Partition group assignments for background data. eval.bg.grp(e.mx) |> str() #>  Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 2 2 2 2 2 2 2 2 2 2 ... # NOTE -- This code is not evaluated and so will display no output in this vignette. # Please run independently.  # For maxent.jar models, we can access this information in the lambdas slot. m1.mxjar <- e.mxjar@models$fc.LQ_rm.1 m1.mxjar@lambdas # The notation used here is difficult to decipher, so check out the  # [`rmaxent`](https://github.com/johnbaums/rmaxent/blob/master/) package. # available on Github for the `parse_lambdas()` function. parse_lambdas(m1.mxjar) # We can also get a long list of results statistics from the results slot. m1.mxjar@results"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"plot","dir":"Articles","previous_headings":"","what":"Visualizing tuning results","title":"ENMeval 2.0.5 Vignette","text":"ENMeval 2.0.x built-plotting function (eval.plot) visualize results different models tuned ggplot. , plot average validation AUC omission rates models tuned. x-axis regularization multiplier, color points lines represents feature class. Notice models NA scores cross-validation plotted , hinge models rm 2 higher shown errors cross-validation.","code":"evalplot.stats(e = e.mx, stats = \"or.10p\", color = \"fc\", x.var = \"rm\") # We can plot more than one statistic at once with ggplot facetting. evalplot.stats(e = e.mx, stats = c(\"or.10p\", \"cbi.val\"), color = \"fc\", x.var = \"rm\") # Sometimes the error bars make it hard to visualize the plot, so we can try turning them off. evalplot.stats(e = e.mx, stats = c(\"or.10p\", \"cbi.val\"), color = \"fc\", x.var = \"rm\",                 error.bars = FALSE) # We can also fiddle with the dodge argument to jitter the positions of overlapping points. evalplot.stats(e = e.mx, stats = c(\"or.10p\", \"cbi.val\"), color = \"fc\", x.var = \"rm\",                 dodge = 0.5) # Finally, we can switch which variables are on the x-axis and which symbolized by color. # ENMeval currently only accepts two variables for plotting at a time. evalplot.stats(e = e.mx, stats = c(\"or.10p\", \"cbi.val\"), color = \"rm\", x.var = \"fc\",                 error.bars = FALSE)"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"select","dir":"Articles","previous_headings":"","what":"Model selection","title":"ENMeval 2.0.5 Vignette","text":"results, want select one models think optimal across models ran. example, demonstrate select models without considering cross-validation results using AICc (Warren & Seifert 2011; see Velasco & González-Salazar 2019) sequential method uses cross-validation results selecting models lowest average 10 percentile omission rate, break ties, highest average validation Continuous Boyce Index (Hirzel et al. 2006) calculated function R package ecospat (Di Cola et al. 2017). Concerning AUC, Lobo et al. (2008) others pointed validation AUC inappropriate absolute performance measure presence-background ENMs, valid use relative comparisons models constructed data (Radosavljevic & Anderson 2014). Thus, can used well choose models, though typically correlated CBI. Let’s now choose optimal model settings based sequential criteria examine . view marginal response curves maxent.jar models. Now plot inspect prediction raster optimal model. Note default maxent.jar (versions >3.3.3k) maxnet models, predictions ‘cloglog’ output format bounded 0 1 (Phillips et al. 2017). can changed pred.type argument ENMevaluate. predictions entire extent input predictor variable rasters, thus include areas outside background extent used model training. Thus, interpret areas far outside extent caution.  Let us now explore model complexity changes predictions example. compare simple model built linear feature classes highest regularization multiplier value used (fc=‘L’, rm=5) complex model built linear, quadratic, hinge feature classes lowest regularization multiplier value used (fc=‘LQH’, rm=1). first examine marginal response curves, mapped model model predictions. Notice simpler models tend smooth predictions suitability, complex ones tend show patchiness. Deciding whether model simple complex appropriate study straightforward, guides exist literature (e.g., Merow et al. 2014).","code":"# Overall results res <- eval.results(e.mx) # Select the model with delta AICc equal to 0, or the one with the lowest AICc score. # In practice, models with delta AICc scores less than 2 are usually considered  # statistically equivalent. opt.aicc <- res |> filter(delta.AICc == 0) opt.aicc #>    fc rm   tune.args auc.train cbi.train auc.diff.avg auc.diff.sd auc.val.avg #> 1 LQH  2 fc.LQH_rm.2 0.8822739     0.938   0.09416783   0.1200718   0.7887931 #>   auc.val.sd cbi.val.avg cbi.val.sd or.10p.avg or.10p.sd or.mtp.avg  or.mtp.sd #> 1  0.1438574       0.619  0.3072599   0.214899 0.1841122 0.05113636 0.07509177 #>      AICc delta.AICc w.AIC ncoef #> 1 3808.58          0     1    27 # This dplyr operation executes the sequential criteria explained above, but # first removes settings with NA values for omission rate. opt.seq <- res |>    filter(!is.na(or.10p.avg)) |>   filter(or.10p.avg == min(or.10p.avg)) |>    filter(cbi.val.avg == max(cbi.val.avg)) opt.seq #>    fc rm   tune.args auc.train cbi.train auc.diff.avg auc.diff.sd auc.val.avg #> 1 LQH  3 fc.LQH_rm.3  0.860107     0.919    0.1037965   0.1181042   0.7703849 #>   auc.val.sd cbi.val.avg cbi.val.sd or.10p.avg or.10p.sd or.mtp.avg  or.mtp.sd #> 1  0.1422159      0.6155  0.2875604  0.2039141 0.2097099 0.06818182 0.08088696 #>       AICc delta.AICc        w.AIC ncoef #> 1 3854.314   45.73378 1.172294e-10    19 # We can select a single model from the ENMevaluation object using the tune.args of our # optimal model. mod.seq <- eval.models(e.mx)[[opt.seq$tune.args]] # Here are the non-zero coefficients in our model. mod.seq$betas #>                                          bio2  #>                                 -4.627958e-01  #>                                         bio13  #>                                  6.952041e-03  #>                                         bio14  #>                                 -9.994936e-03  #>                                         bio15  #>                                 -1.024131e-02  #>                                         bio19  #>                                  4.308801e-04  #>                                     I(bio5^2)  #>                                 -4.196653e-04  #>                                    I(bio18^2)  #>                                 -4.125060e-08  #> hinge(bio3):90.0485847628846:94.3169937133789  #>                                  1.041632e+00  #> hinge(bio3):42.0289840698242:76.1762556737783  #>                                  4.092149e+00  #>  hinge(bio5):32.091081969592:37.1590003967285  #>                                 -1.121875e+00  #> hinge(bio5):6.11800003051758:25.1226941322794  #>                                  1.906558e+00  #> hinge(bio8):26.0479145001392:29.4118328094482  #>                                  2.013521e+00  #>              hinge(bio13):465.34693877551:877  #>                                 -2.802205e-01  #>               hinge(bio13):0:286.367346938775  #>                                 -1.361221e+00  #>               hinge(bio13):0:304.265306122449  #>                                 -1.349046e-04  #>               hinge(bio14):0:59.7551020408163  #>                                 -1.211475e-01  #>               hinge(bio18):0:312.244897959184  #>                                  4.863442e+00  #>            hinge(bio19):1059.69387755102:2077  #>                                 -4.091483e-01  #>             hinge(bio19):1144.4693877551:2077  #>                                 -1.021308e+00 # And these are the marginal response curves for the predictor variables wit non-zero  # coefficients in our model. We define the y-axis to be the cloglog transformation, which # is an approximation of occurrence probability (with assumptions) bounded by 0 and 1 # (Phillips et al. 2017). plot(mod.seq, type = \"cloglog\") # The above function plots with graphical customizations to include multiple plots on  # the same page.  # Clear the graphics device to avoid plotting sequential plots with these settings. dev.off() #> null device  #>           1 # NOTE -- This code is not evaluated and so will display no output in this vignette. # Please run independently.  # maxent.jar models use the predicts::partialResponse() function for this pr <- predicts::partialResponse(e.mxjar@models[[opt.seq$tune.args]],                                 var = \"bio5\") plot(pr, type = \"l\", las = 1) # We can select the model predictions for our optimal model the same way we did for the  # model object above. pred.seq <- eval.predictions(e.mx)[[as.character(opt.seq$tune.args)]] plot(pred.seq, col = terrain.colors(100))  # We can also plot the binned background points with the occurrence points on top to  # visualize where the training data is located. points(eval.bg(e.mx), pch = 3, col = eval.bg.grp(e.mx), cex = 0.5) points(eval.occs(e.mx), pch = 21, bg = eval.occs.grp(e.mx)) # First, let's examine the non-zero model coefficients in the betas slot. # The simpler model has fewer model coefficients. mod.simple <- eval.models(e.mx)[['fc.L_rm.5']] mod.complex <- eval.models(e.mx)[['fc.LQH_rm.1']] mod.simple$betas #>         bio2         bio3         bio8        bio13        bio14        bio15  #> -0.532966677  0.036981721  0.014488869  0.004688425 -0.013258936 -0.023718739  #>        bio18  #>  0.001309774 length(mod.simple$betas) #> [1] 7 mod.complex$betas #>                                           bio2  #>                                  -1.300772e-01  #>                                          bio13  #>                                   1.567920e-02  #>                                          bio14  #>                                  -3.408800e-03  #>                                          bio15  #>                                  -1.047407e-02  #>                                          bio18  #>                                   4.783857e-04  #>                                          bio19  #>                                   5.045810e-04  #>                                      I(bio3^2)  #>                                  -5.605024e-04  #>                                      I(bio5^2)  #>                                  -8.933996e-05  #>                                      I(bio9^2)  #>                                  -2.114426e-03  #>  hinge(bio2):10.3210696200935:18.9859161376953  #>                                  -1.663205e+00  #>  hinge(bio2):10.6098978373469:18.9859161376953  #>                                  -2.082817e+00  #>  hinge(bio2):4.83333349227905:8.58810031657316  #>                                  -1.580067e+00  #>  hinge(bio3):88.9814825252611:94.3169937133789  #>                                   1.123558e+00  #>  hinge(bio3):90.0485847628846:94.3169937133789  #>                                   2.667189e+00  #>  hinge(bio3):92.1827892381318:94.3169937133789  #>                                  -2.634117e-01  #>  hinge(bio3):42.0289840698242:67.6394377727898  #>                                  -1.298906e+01  #>  hinge(bio3):42.0289840698242:76.1762556737783  #>                                   1.381063e+01  #>   hinge(bio5):32.091081969592:37.1590003967285  #>                                  -3.393143e+00  #>  hinge(bio5):6.11800003051758:25.1226941322794  #>                                   7.683829e+00  #>  hinge(bio8):25.4872614485877:29.4118328094482  #>                                   4.599610e-01  #>  hinge(bio8):26.0479145001392:29.4118328094482  #>                                   4.394250e+00  #>  hinge(bio8):27.7298736547937:29.4118328094482  #>                                  -4.326107e+00  #>              hinge(bio13):447.448979591837:877  #>                                  -5.871009e+00  #>                hinge(bio13):0:196.877551020408  #>                                   8.887840e-01  #>                hinge(bio13):0:214.775510204082  #>                                   1.749113e+00  #>                hinge(bio13):0:304.265306122449  #>                                  -7.253474e+00  #>              hinge(bio14):129.469387755102:488  #>                                  -7.833881e-02  #>              hinge(bio14):139.428571428571:488  #>                                  -1.871329e+00  #>                hinge(bio14):0:29.8775510204082  #>                                  -1.441614e-01  #>                hinge(bio14):0:59.7551020408163  #>                                  -1.069372e+00  #> hinge(bio15):69.9453473772321:201.607177734375  #>                                  -6.670763e-01  #>                hinge(bio15):0:20.5721609933036  #>                                   6.341525e+00  #>                hinge(bio15):0:41.1443219866071  #>                                  -1.084412e+00  #>             hinge(bio18):728.571428571429:1700  #>                                  -1.210289e+00  #>             hinge(bio18):1110.20408163265:1700  #>                                  -1.383907e+00  #>                hinge(bio18):0:312.244897959184  #>                                   5.003381e+00  #>             hinge(bio19):847.755102040816:2077  #>                                  -7.545615e-01  #>             hinge(bio19):1017.30612244898:2077  #>                                  -2.389713e+00  #>             hinge(bio19):1059.69387755102:2077  #>                                  -2.880705e-02  #>                hinge(bio19):0:42.3877551020408  #>                                   1.632038e+00  #>                hinge(bio19):0:169.551020408163  #>                                  -1.410946e-01  #>                hinge(bio19):0:254.326530612245  #>                                  -4.644699e-01  #>                 hinge(bio19):0:508.65306122449  #>                                   1.112090e+00 length(mod.complex$betas) #> [1] 43 # Next, let's take a look at the marginal response curves. # The complex model has marginal responses with more curves (from quadratic terms) and  # spikes (from hinge terms). plot(mod.simple, type = \"cloglog\") plot(mod.complex, type = \"cloglog\") # To get the data for the marginal response curves from a maxnet model, use the  # following code. You can then plot them any way you want. mod.complex.mrc <-maxnet::response.plot(mod.complex,                                          v = \"bio2\",                                          type = \"cloglog\",                                         plot = FALSE) ggplot(mod.complex.mrc, aes(x = bio2, y = pred)) +    geom_line() + ylab(\"cloglog prediction\") + theme_bw() # Finally, let's cut the plotting area into two rows to visualize the predictions  # side-by-side. par(mfrow = c(2,1), mar = c(2,1,2,0)) # The simplest model: linear features only and high regularization. plot(eval.predictions(e.mx)[['fc.L_rm.5']], ylim = c(-30,20), xlim = c(-90,-30),       main = 'L_5 prediction', col = terrain.colors(100)) # The most complex model: linear, quadratic, and hinge features with low regularization plot(eval.predictions(e.mx)[['fc.LQH_rm.1']], ylim = c(-30,20), xlim = c(-90,-30),       main = 'LQH_1 prediction', col = terrain.colors(100))"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"null","dir":"Articles","previous_headings":"","what":"Null models","title":"ENMeval 2.0.5 Vignette","text":"able calculate performance metrics model, omission rates AUC, know compare metrics calculated null models built random data. information allow us determine significance effect sizes metrics. metrics calculated empirical model significantly different calculated series null models, high confidence meaningfully represent well empirical model performed. Raes & ter Steege (2007) first introduced concept null ENM demonstrated can applied. approach sampled random occurrence records study extent evaluated null models random cross-validation. Since enhancements made original approach. One modification implemented Bohl et al. (2019), proposed evaluating models withheld occurrence data empirical model. approach allows direct comparisons null performance metrics emprical models. Kass et al. (2020) extended method configuring calculate null performance metrics using spatial partitions. ENMeval 2.0.x functionality run null ENMs using Bohl et al. method Kass et al. extension visualize performance empirical model null model averages.","code":"# We first run the null simulations with 100 iterations to get a reasonable null distribution  # for comparisons with the empirical values mod.null <- ENMnulls(e.mx, mod.settings = list(fc = \"LQH\", rm = 3), no.iter = 100) # We can inspect the results of each null simulation. null.results(mod.null) |> head() #>    fc rm   tune.args auc.train cbi.train auc.diff.avg auc.diff.sd auc.val.avg #> 1 LQH  3 fc.LQH_rm.3 0.6507439     0.897    0.1621316   0.1739245   0.5186240 #> 2 LQH  3 fc.LQH_rm.3 0.6679562     0.910    0.2606238   0.1711055   0.5007493 #> 3 LQH  3 fc.LQH_rm.3 0.6774240     0.977    0.2368137   0.2049700   0.5259562 #> 4 LQH  3 fc.LQH_rm.3 0.6808377     0.969    0.2858186   0.1456140   0.4977401 #> 5 LQH  3 fc.LQH_rm.3 0.6901094     0.964    0.1784331   0.2114035   0.5151189 #> 6 LQH  3 fc.LQH_rm.3 0.6663147     0.962    0.2592358   0.1736700   0.4961347 #>   auc.val.sd cbi.val.avg cbi.val.sd or.10p.avg  or.10p.sd  or.mtp.avg #> 1  0.2094396     0.12500  0.6422466  0.1791667 0.09337961 0.000000000 #> 2  0.2736006    -0.02425  0.7858657  0.2842172 0.28860956 0.033333333 #> 3  0.2680005     0.13300  0.7856327  0.2613636 0.39416843 0.005555556 #> 4  0.2552322     0.05100  0.7734662  0.3342172 0.34400734 0.016666667 #> 5  0.2213815     0.06525  0.6656277  0.2566919 0.27836130 0.050000000 #> 6  0.2450237    -0.01925  0.6993618  0.2390152 0.34145831 0.011111111 #>    or.mtp.sd ncoef #> 1 0.00000000    11 #> 2 0.06666667    18 #> 3 0.01111111    13 #> 4 0.02127616    14 #> 5 0.06382847    12 #> 6 0.02222222    19 # And even inspect the results of each partition of each null simulation. null.results.partitions(mod.null) |> head() #>   iter   tune.args fold   auc.val    auc.diff cbi.val    or.mtp     or.10p #> 1    1 fc.LQH_rm.3    1 0.6768476 0.002594511   0.674 0.0000000 0.15555556 #> 2    1 fc.LQH_rm.3    2 0.4396597 0.171479059  -0.237 0.0000000 0.15909091 #> 3    1 fc.LQH_rm.3    3 0.2585588 0.401438625  -0.596 0.0000000 0.31111111 #> 4    1 fc.LQH_rm.3    4 0.6994300 0.073014078   0.659 0.0000000 0.09090909 #> 5    2 fc.LQH_rm.3    1 0.5833962 0.174584670   0.389 0.1333333 0.28888889 #> 6    2 fc.LQH_rm.3    2 0.3992003 0.141336266  -0.568 0.0000000 0.11363636 # For a summary, we can look at a comparison between the empirical and simulated results. null.emp.results(mod.null) #>   statistic    auc.train  cbi.train      auc.val     auc.diff       cbi.val #> 1  emp.mean 8.609204e-01 0.94100000 7.662181e-01  0.107169028  5.927500e-01 #> 2    emp.sd           NA         NA 1.448854e-01  0.125131727  3.326694e-01 #> 3 null.mean 6.723666e-01 0.89842000 4.760547e-01  0.217913428 -3.863750e-02 #> 4   null.sd 1.860910e-02 0.08927092 4.554626e-02  0.045507789  1.399808e-01 #> 5    zscore 1.013234e+01 0.47697505 6.370740e+00 -2.433526252  4.510528e+00 #> 6    pvalue 1.985106e-24 0.31668994 9.405895e-11  0.007476276  3.233319e-06 #>       or.mtp      or.10p #> 1 0.06250000  0.16969697 #> 2 0.07276278  0.13135003 #> 3 0.03426641  0.27601641 #> 4 0.04489074  0.09926046 #> 5 0.62894011 -1.07111581 #> 6 0.73530587  0.14205868 # Finally, we can make plots of the null model results as a histogram. In this # example, the empirical validation CBI value (solid red line) is significantly  # higher than random, as it is higher than the 99th quantile of the null values # (dashed purple line). For reference, this plot also includes the null 95th  # quantile (dashed blue line) and the null mean (solid blue line). For more  # details, please see ?evalplot.nulls. evalplot.nulls(mod.null, stats = c(\"or.10p\", \"cbi.val\"), plot.type = \"histogram\") # Or we can visualize the results with a violin plot. The red point shows the  # empirical value and the shape shows the density of the null distribution # with lines denoting the quantiles. evalplot.nulls(mod.null, stats = c(\"or.10p\", \"cbi.val\"), plot.type = \"violin\")"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"metadata","dir":"Articles","previous_headings":"","what":"Metadata","title":"ENMeval 2.0.5 Vignette","text":"last point vignette discuss extremely important scientific research: reproducibility. ENMeval 2.0.x now catalogs details analysis essential reproducibility rangeModelMetadata object, accessible output ENMevaluation object. framework philosophy behind rangeModelMetadata described Merow et al. (2019), related efforts define crucial metadata standards rating systems ENMs come since (e.g., Araújo et al. 2019, Feng et al. 2019, Zurell et al. 2020). Metadata generated ENMeval can saved CSV file sharing collaborators use supplemental information manuscript, etc.","code":"# Generate a rangeModelMetadata object based on the information stored in the  # ENMevaluate object. rmm <- eval.rmm(e.mx) # We can fill in the model selection rules based on the sequential criteria we chose. rmm$model$selectionRules <- \"lowest 10 percentile omission rate,  break ties with average validation CBI\" # We can also enter our optimal model settings and the details of our optimal  # model's prediction. rmm$model$finalModelSettings <- \"LQH3\" rmm$prediction$continuous$minVal <- terra::global(pred.seq, min) rmm$prediction$continuous$maxVal <- terra::global(pred.seq, max) rmm$prediction$continuous$units <- \"suitability (cloglog transformation)\" # This is just an example -- there may be more fields relevant to fill in for your study. # Finally, we can save the metadata to a CSV file. rangeModelMetadata::rmmToCSV(rmm, \"rmm_mx1.csv\")"},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"resources","dir":"Articles","previous_headings":"","what":"References and Resources","title":"ENMeval 2.0.5 Vignette","text":"list references resources exhaustive means, mainly includes sources referenced vignette text. field expanding every year, many papers packages one learning ENMs explore.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"web-resources","dir":"Articles","previous_headings":"","what":"ENMeval 2.0.5 Vignette","title":"ENMeval 2.0.5 Vignette","text":"Hijmans, R. & Elith, J. (2021) Species distribution modeling. Maxent Google Group Phillips, S. J. (2021) brief tutorial Maxent. &T Research. Available : https://biodiversityinformatics.amnh.org/open_source/maxent/Maxent_tutorial_2021.pdf Yoder, J. (2013). Species distribution models R. Molecular Ecologist.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"general-guides","dir":"Articles","previous_headings":"","what":"ENMeval 2.0.5 Vignette","title":"ENMeval 2.0.5 Vignette","text":"Araújo, M. B., Anderson, R. P., Barbosa, . M., Beale, C. M., Dormann, C. F., Early, R., Garcia, R. ., Guisan, ., Maiorano, L., Naimi, B., & O’Hara, R. B. (2019). Standards distribution models biodiversity assessments. Science Advances, 5: eaat4858. Franklin, J. (2010). Mapping species distributions: spatial inference prediction. Cambridge University Press. Guisan ., Thuiller W., & Zimmermann N. E. (2017). Habitat Suitability Distribution Models Applications R. Cambridge University Press, Cambridge, UK. Merow, C., Smith, M. J., Edwards Jr, T. C., Guisan, ., McMahon, S. M., Normand, S., Thuiller, W., Wüest, R. O., Zimmermann, N. E., & Elith, J. (2014). gain simplicity versus complexity species distribution models? Ecography, 37: 1267–1281. Peterson, .T., Soberón, J., Pearson, R.G., Anderson, R.P., Martínez-Meyer, E., Nakamura, M., & Araújo, M.B. (2011) Ecological Niches Geographic Distributions. Monographs Population Biology, 49. Princeton University Press. -VanDerWal, J., Shoo, L. P., Graham, C., & Williams, S. E. (2009). Selecting pseudo-absence data presence-distribution modeling: far stray know?. Ecological Modelling, 220: 589-594.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"maxent","dir":"Articles","previous_headings":"","what":"ENMeval 2.0.5 Vignette","title":"ENMeval 2.0.5 Vignette","text":"Elith, J., Phillips, S. J., Hastie, T., Dudík, M., Chee, Y. E., & Yates, C. J. (2011). statistical explanation MaxEnt ecologists. Diversity Distributions, 17(1), 43-57. Merow, C., Smith, M., & Silander, J.. (2013). practical guide Maxent: , inputs settings matter. Ecography, 36, 1-12. Phillips, S. J., Anderson, R. P., & Schapire, R. E. (2006). Maximum entropy modeling species geographic distributions. Ecological Modelling, 190: 231–259. Phillips, S. J., & Dudík, M. (2008). Modeling species distributions Maxent: new extensions comprehensive evaluation. Ecography, 31: 161-175. Phillips, S. J., Anderson, R. P., Dudík, M., Schapire, R. E., & Blair, M. E. (2017). Opening black box: open-source release Maxent. Ecography, 40: 887–893.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"environmental-and-niche-similarity","dir":"Articles","previous_headings":"","what":"ENMeval 2.0.5 Vignette","title":"ENMeval 2.0.5 Vignette","text":"Elith, J., Kearney, M., & Phillips, S. (2010). art modelling range‐shifting species. Methods Ecology Evolution, 1(4), 330-342. Fitzpatrick, M. C., & Hargrove, W. W. (2009). projection species distribution models problem non-analog climate. Biodiversity Conservation, 18(8), 2255-2261. Mesgaran, M. B., Cousens, R. D., & Webber, B. L. (2014). dragons: tool quantifying novelty due covariate range correlation change projecting species distribution models. Diversity Distributions, 20: 1147-1159. Owens, H. L., Campbell, L. P., Dornak, L. L., Saupe, E. E., Barve, N., Soberón, J., … & Peterson, . T. (2013). Constraints interpretation ecological niche models limited environmental ranges calibration areas. Ecological Modelling, 263, 10-18. Warren, D. L., Glor, R. E., & Turelli, M. (2008). Environmental niche equivalency versus conservatism: quantitative approaches niche evolution. Evolution: International Journal Organic Evolution, 62: 2868-2883.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"model-evaluation","dir":"Articles","previous_headings":"","what":"ENMeval 2.0.5 Vignette","title":"ENMeval 2.0.5 Vignette","text":"Aiello-Lammens, M.E., Boria, R.., Radosavljevic, ., Vilela, B., & Anderson, R.P. (2015) spThin: R package spatial thinning species occurrence records use ecological niche models. Ecography, 38, 541-545. Fielding, .H. & Bell, J.F. (1997). review methods assessment prediction errors conservation presence-absence models. Environmental Conservation 24, 38-49. Hallgren, W., Santana, F., Low-Choy, S., Zhao, Y., & Mackey, B. (2019). Species distribution models can highly sensitive algorithm configuration. Ecological Modelling, 408: 108719. Hastie, T., Tibshirani, R., & Friedman, J. (2009). Elements Statistical Learning: Data Mining, Inference, Prediction. Springer, New York, NY. Hirzel, . H., Le Lay, G., Helfer, V., Randin, C., & Guisan, . (2006). Evaluating ability habitat suitability models predict species presences. Ecological Modelling, 199: 142-152. Kass, J. M., Anderson, R. P., Espinosa‐Lucas, ., Juárez‐Jaimes, V., Martínez‐Salas, E., Botello, F., Tavera, G., Flores‐Martínez, J. J., & Sánchez‐Cordero, V. (2020). Biotic predictors phenological information improve range estimates migrating monarch butterflies Mexico. Ecography, 43(3), 341-352. Lobo, J. M., Jiménez‐Valverde, ., & Real, R. (2008). AUC: misleading measure performance predictive distribution models. Global ecology Biogeography, 17: 145-151. Pearson, R.G., Raxworthy, C.J., Nakamura, M., & Peterson, .T. (2007) Predicting species distributions small numbers occurrence records: test case using cryptic geckos Madagascar. Journal Biogeography 34, 102-117. Peterson, . T., Papeş, M., & Soberón, J. (2008). Rethinking receiver operating characteristic analysis applications ecological niche modeling. Ecological Modelling, 213: 63-72. Radosavljevic, . & Anderson, R.P. (2014). Making better Maxent models species distributions: complexity, overfitting evaluation. Journal Biogeography 41, 629-643. Roberts, D. R., Bahn, V., Ciuti, S., Boyce, M. S., Elith, J., Guillera‐Arroita, G., Hauenstein, S., Lahoz‐Monfort, J. J., Schröder, B., Thuiller, W., & Warton, D. . (2017). Cross-validation strategies data temporal, spatial, hierarchical, phylogenetic structure. Ecography, 40: 913–929. Shcheglovitova, M. & Anderson, R.P. (2013). Estimating optimal complexity ecological niche models: jackknife approach species small sample sizes. Ecological Modelling 269: 9-17. Velasco, J. . & González-Salazar, C. (2019). Akaike information criterion “test” geographical prediction accuracy ecological niche modelling. Ecological Informatics, 51: 25–32. Veloz, S.D. (2009) Spatially autocorrelated sampling falsely inflates measures accuracy presence-niche models. Journal Biogeography 36: 2290-2299. Warren, D. L. & Seifert, S. N. (2011). Ecological niche modeling Maxent: importance model complexity performance model selection criteria. Ecological Applications, 21: 335–342.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"null-enms","dir":"Articles","previous_headings":"","what":"ENMeval 2.0.5 Vignette","title":"ENMeval 2.0.5 Vignette","text":"Bohl, C. L., Kass, J. M., & Anderson, R. P. (2019). new null model approach quantify performance significance ecological niche models species distributions. Journal Biogeography, 46: 1101-1111. Raes, N., & ter Steege, H. (2007). null-model significance testing presence-species distribution models. Ecography, 30(5), 727-736.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"model-transfer","dir":"Articles","previous_headings":"","what":"ENMeval 2.0.5 Vignette","title":"ENMeval 2.0.5 Vignette","text":"Soley-Guardia, M., Carnaval, . C., & Anderson, R. P. (2019). Sufficient versus optimal climatic stability Late Quaternary: using environmental quality guide phylogeographic inferences Neotropical montane system. Journal Mammalogy, 100: 1783–1807. Wenger, S.J. & Olden, J.D. (2012) Assessing transferability ecological models: underappreciated aspect statistical validation. Methods Ecology Evolution, 3: 260-267. Wright, . N., Hijmans, R. J., Schwartz, M. W., & Shaffer, H. B. (2015). Multiple sources uncertainty affect metrics ranking conservation risk climate change. Diversity Distributions, 21(1), 111-122.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"metadata-1","dir":"Articles","previous_headings":"","what":"ENMeval 2.0.5 Vignette","title":"ENMeval 2.0.5 Vignette","text":"Feng, X., Park, D. S., Walker, C., Peterson, . T., Merow, C., & Papeş, M. (2019). checklist maximizing reproducibility ecological niche models. Nature Ecology Evolution, 3: 1382–1395. Merow, C., Maitner, B. S., Owens, H. L., Kass, J. M., Enquist, B. J., Jetz, W., & Guralnick, R. (2019). Species’ range model metadata standards: RMMS. Global Ecology Biogeography, 28: 1912–1924. Zurell, D., Franklin, J., König, C., Bouchet, P. J., Dormann, C. F., Elith, J., Fandos, G., Feng, X., Guillera‐Arroita, G., Guisan, . & Lahoz‐Monfort, J. J. (2020). standard protocol reporting species distribution models. Ecography, 43: 1261–1277.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html","id":"r-packages-for-enms","dir":"Articles","previous_headings":"","what":"ENMeval 2.0.5 Vignette","title":"ENMeval 2.0.5 Vignette","text":"Baumgartner, J., & Wilson, P. (2021). rmaxent: Tools working Maxent R. R package version 0.8.5.9000, URL: https://github.com/johnbaums/rmaxent. Cobos, M. E., Peterson, . T., Barve, N., & Osorio-Olvera, L. (2019). kuenm: R package detailed development ecological niche models using Maxent. PeerJ, 7: e6281 Di Cola, V., Broennimann, O., Petitpierre, B., Breiner, F. T., d’Amen, M., Randin, C., … & Guisan, . (2017). ecospat: R package support spatial analyses modeling species niches distributions. Ecography, 40(6), 774-787. Muscarella, R., Galante, P. J., Soley-Guardia, M., Boria, R. ., Kass, J. M., Uriarte, M. & Anderson, R. P. (2014). ENMeval: R package conducting spatially independent evaluations estimating optimal model complexity Maxent ecological niche models. Methods Ecology Evolution, 5: 1198–1205. Valavi, R., Elith, J., Lahoz-Monfort, J. J., & Guillera-Arroita G. (2019) blockCV: R package generating spatially environmentally separated folds k-fold cross-validation species distribution models. Methods Ecology Evolution, 10:225–232. Wickham H. (2016). ggplot2: Elegant Graphics Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jamie M. Kass. Author, maintainer. Robert Muscarella. Author. Peter J. Galante. Author. Corentin Bohl. Author. Gonzalo E. Buitrago-Pinilla. Author. Robert . Boria. Author. Mariano Soley-Guardia. Author. Robert P. Anderson. Author.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kass J, Muscarella R, Galante P, Bohl C, Buitrago-Pinilla G, Boria R, Soley-Guardia M, Anderson R (2021). “ENMeval 2.0: Redesigned customizable reproducible modeling species’ niches distributions.” Methods Ecology Evolution, 12(9), 1602-1608. doi:10.1111/2041-210X.13628.","code":"@Article{,   title = {ENMeval 2.0: Redesigned for customizable and reproducible modeling of species’ niches and distributions},   author = {Jamie M. Kass and Robert Muscarella and Peter J. Galante and Corentin Bohl and Gonzalo E. Buitrago-Pinilla and Robert A. Boria and Mariano Soley-Guardia and Robert P. Anderson},   journal = {Methods in Ecology and Evolution},   year = {2021},   volume = {12},   number = {9},   pages = {1602-1608},   doi = {https://doi.org/10.1111/2041-210X.13628}, }"},{"path":[]},{"path":"https://jamiemkass.github.io/ENMeval/index.html","id":"r-package-for-automated-tuning-and-evaluations-of-ecological-niche-models","dir":"","previous_headings":"","what":"R package for automated tuning and evaluations of ecological niche models","title":"Automated Tuning and Evaluations of Ecological Niche Models","text":"ENMeval R package performs automated tuning evaluations ecological niche models / species distribution models. models make predictions species’ niche relationships potential geographic distributions based presence data, environmental predictor variables, sample available environmental conditions (.e., background data). “Model tuning” commonly used machine-learning models. means building candidate models range complexity settings, evaluating accuracy one (cross-validation), selecting optimal settings data based best-performing model. exercise important difficult predict advance complex model needs make accurate ecologically realistic predictions species. much model complexity leads overfitting, model fits data well predict new data accurately. Model tuning helps maximize predictive ability avoiding model overfitting. ENMeval package features single function performs model tuning based user specifications, including methods partitioning data cross-validation (random, leave-one-, spatial, custom), evaluates models using predefined performance metrics (AUC, Continuous Boyce Index, omission rates) option insert others. package includes functionality three models: maxent.jar (Java implementation Maxent), maxnet (R implementation Maxent), BIOCLIM (climate envelope method). Users can also specify algorithms customizing ENMdetails object (?ENMdetails). package also offers comprehensive metadata output, null model evaluations, visualization tools, extensive tutorial walks full analysis workflow. Many features ENMeval created response user requests – thank input! Version >=2.0.0 represents extensive restructure expansion previous versions, 2.0.5 big move raster dismo functions terra predicts. detailed description ENMeval, please reference recent publication: Kass, J. M., Muscarella, R., Galante, P. J., Bohl, C., Pinilla-Buitrago, G. E., Boria, R. ., Soley-Guardia, M., & Anderson, R. P. (2021). ENMeval 2.0: redesigned customizable reproducible modeling species’ niches distributions. Methods Ecology Evolution, 12: 1602-1608. original package version, please reference older publication: Muscarella, R., Galante, P. J., Soley-Guardia, M., Boria, R. ., Kass, J. M., Uriarte, M. Anderson, R. P. (2014), ENMeval: R package conducting spatially independent evaluations estimating optimal model complexity Maxent ecological niche models. Methods Ecology Evolution, 5: 1198–1205.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/index.html","id":"notes","dir":"","previous_headings":"","what":"NOTES:","title":"Automated Tuning and Evaluations of Ecological Niche Models","text":"ENMeval work progress, changing slowly fix bugs users identify . find bug, please raise Issue Github repo resolve soon can. CRAN version may lag behind Github one, please try development version first issues. Install : devtools::install_github(\"jamiemkass/ENMeval\") vignette included CRAN version package due file size constraints, available package’s Github Pages website. Please make sure use recent version maxent.jar , bug fixes occasionally made. Note version 0.3.0, default implementation uses ‘maxnet’ R package. output differs original Java program features compatible (e.g., variable importance, html output).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMdetails.html","id":null,"dir":"Reference","previous_headings":"","what":"ENMdetails class — ENMdetails-class","title":"ENMdetails class — ENMdetails-class","text":"S4 class details packages, functions, messages associated specific species distribution model (SDM) ecological niche model (ENM). Objects class generated ENMdetails(). examples, look package's R folder scripts beginning \"enm\" – pre-made ENMdetails object specifications work ENMeval box.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMdetails.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ENMdetails class — ENMdetails-class","text":"","code":"# S4 method for class 'ENMdetails' show(object)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMdetails.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ENMdetails class — ENMdetails-class","text":"object ENMdetails object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMdetails.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ENMdetails class — ENMdetails-class","text":"name character: name algorithm fun function: function runs algorithm errors function: returns errors chosen user prevent malfunction analysis. available arguments : occs, envs, bg, tune.args, partitions, algorithm, partition.settings, .settings, categoricals, doClamp, clamp.directions. msgs function: prints messages showing package version number, etc., related input tuning parameters tune.args. available arguments : tune.args, .settings. args function: returns parameters needed run algorithm function. available arguments : occs.z, bg.z, tune.tbl., .settings (x.z data.frame envs values coordinates x, tune.tbl.single set tuning parameters). predict function: specifies calculate model prediction Raster* data frame. available arguments : mod, envs, .settings. ncoefs function: counts number non-zero model coefficients. available arguments : mod. variable.importance function: generates data frame variable importance model object (functionality available). available arguments : mod.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMdetails.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ENMdetails class — ENMdetails-class","text":"Jamie M. Kass, jamie.m.kass@gmail.com","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMeval-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Automated runs and evaluations of ecological niche models — ENMeval-package","title":"Automated runs and evaluations of ecological niche models — ENMeval-package","text":"Runs ecological niche models combinations user-defined settings (.e., tuning), performs cross validation evaluate models, returns data tables aid selection optimal model settings balance goodness--fit model complexity. Also functions partition data spatially () cross validation, plot multiple visualizations results, run null models estimate significance effect sizes performance metrics, calculate range overlap model predictions, among others. package originally built Maxent models (Phillips et al. 2006, Phillips et al. 2017), current version allows possible extensions modeling algorithm. extensive vignette, guides users package functionality unfortunately file size big CRAN, can found package's Github Pages website: https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMeval-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automated runs and evaluations of ecological niche models — ENMeval-package","text":"See README details.","code":""},{"path":[]},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMeval-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automated runs and evaluations of ecological niche models — ENMeval-package","text":"Maintainer: Jamie M. Kass jamie.m.kass@gmail.com Authors: Robert Muscarella Peter J. Galante Corentin Bohl Gonzalo E. Buitrago-Pinilla Robert . Boria Mariano Soley-Guardia Robert P. Anderson","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune ecological niche model (ENM) settings and calculate evaluation statistics — ENMevaluate","title":"Tune ecological niche model (ENM) settings and calculate evaluation statistics — ENMevaluate","text":"ENMevaluate() primary function ENMeval package. function builds ecological niche models iteratively across range user-specified tuning settings. Users can choose evaluate models cross validation full-withheld testing dataset. ENMevaluate() returns ENMevaluation object slots containing evaluation statistics combination settings cross validation fold therein, well raster predictions model raster data input. evaluation statistics results table aid users identifying model settings balance fit predictive ability. See extensive vignette fully worked examples: <https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html>.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune ecological niche model (ENM) settings and calculate evaluation statistics — ENMevaluate","text":"","code":"ENMevaluate(   occs,   envs = NULL,   bg = NULL,   tune.args = NULL,   partitions = NULL,   algorithm = NULL,   partition.settings = NULL,   other.settings = list(),   categoricals = NULL,   doClamp = TRUE,   raster.preds = TRUE,   clamp.directions = NULL,   user.enm = NULL,   user.grp = NULL,   occs.testing = NULL,   taxon.name = NULL,   n.bg = 10000,   overlap = FALSE,   overlapStat = c(\"D\", \"I\"),   user.val.grps = NULL,   user.eval = NULL,   rmm = NULL,   parallel = FALSE,   numCores = NULL,   updateProgress = FALSE,   quiet = FALSE )"},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune ecological niche model (ENM) settings and calculate evaluation statistics — ENMevaluate","text":"occs matrix / data frame: occurrence records two columns longitude latitude occurrence localities, order. specifying predictor variable values assigned presence/background localities (without inputting raster data), table also one column predictor variable. See Note important distinctions running function without rasters. envs SpatRaster: environmental predictor variables. geographic projection occurrence data. bg matrix / data frame: background records two columns longitude latitude background (pseudo-absence) localities, order. NULL, points randomly sampled across envs number specified argument n.bg. specifying predictor variable values assigned presence/background localities (without inputting raster data), table also one column predictor variable. See Details important distinctions running function without rasters. tune.args named list: model settings tuned (.e., Maxent models:  list(fc = c(\"L\",\"Q\"), rm = 1:3)) partitions character: name partitioning technique. Currently available options nonspatial partitions \"randomkfold\" \"jackknife\", spatial partitions \"block\" \"checkerboard\", \"testing\" partitioning fully withheld data (see argument occs.testing), \"user\" option (see argument user.grp), \"none\" partitioning (see ?partitions details). algorithm character: name algorithm used build models. Currently one \"maxnet\", \"maxent.jar\", \"bioclim\", else name custom ENMdetails implementation. partition.settings named list: used specify certain settings partitioning schema. See Details ?partitions descriptions settings. .settings named list: used specify extra settings analysis. settings internal defaults, specified analysis run default settings. See Details descriptions settings, including specify arguments maxent.jar. categoricals character vector: name names categorical environmental variables. specified, predictor variables treated continuous unless factors. categorical variables already factors, specifying names variables argument needed. doClamp boolean: TRUE (default), model prediction extrapolations restricted upper lower bounds predictor variables. Clamping avoids extreme predictions environment values outside range training data. free extrapolation study aim, set FALSE, applications leaving default TRUE advisable avoid unrealistic predictions. predictor variables input, clamped internally making model predictions clamping . predictor variables input data frames coordinates variable values used instead (SWD format), validation data clamped making model predictions clamping . raster.preds boolean: TRUE (default), return model prediction rasters. FALSE, predictions slot ENMevaluation object empty, raster data input. can still make model prediction rasters using model objects models slot predict() function. clamp.directions named list: specifies direction (\"left\" minimum, \"right\" maximum) clamping predictor variables – (e.g., list(left = c(\"bio1\",\"bio5\"), right = c(\"bio10\",\"bio15\"))). user.enm ENMdetails object: custom ENMdetails object used build models. alternative specifying algorithm character string. user.grp named list: specifies user-defined partition groups, occs.grp = vector partition group (fold) occurrence locality, intended user-defined partitions, bg.grp = vector background (pseudo-absence) localities. occs.testing matrix / data frame: fully withheld testing dataset two columns longitude latitude occurrence localities, order partitions = \"testing\". occurrences used evaluation model training, thus cross validation performed. taxon.name character: name focal species taxon. used primarily annotating ENMevaluation object output metadata (rmm), necessary analysis. n.bg numeric: number background (pseudo-absence) points randomly sample environmental raster data (default: 10000) background records already provided. overlap boolean: TRUE, calculate range overlap statistics (Warren et al. 2008). overlapStat character: range overlap statistics calculated – \"D\" (Schoener's D) \"\" (Hellinger's ) – see ?calc.niche.overlap details. user.val.grps matrix / data frame: user-defined validation record coordinates predictor variable values. used internally ENMnulls() force null model evaluate empirical validation data, current use running ENMevaluate() independently. user.eval function: custom function specifying performance metrics included ENMeval. function must first defined input argument user.eval. function single argument called vars, list includes different data can used calculate metric. See Details vignette worked example. rmm rangeModelMetadata object: specified, ENMevaluate() write metadata details analysis object, , new rangeModelMetadata object generated included output ENMevaluation object. parallel boolean: TRUE, run parallel processing. numCores numeric: number cores use parallel processing. NULL, available cores used. updateProgress boolean: TRUE, use shiny progress bar. use shiny apps. quiet boolean: TRUE, silence function messages (errors).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune ecological niche model (ENM) settings and calculate evaluation statistics — ENMevaluate","text":"ENMevaluation object. See ?ENMevaluation details description columns results table.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tune ecological niche model (ENM) settings and calculate evaluation statistics — ENMevaluate","text":"methodological details implementation ENMeval >=2.0.0 important mention. also brief discussion points relevant null models ?ENMnulls. 1. default, validation AUC calculated respect full background (training + validation). approach follows Radosavljevic & Anderson (2014).setting can changed assigning .settings$validation.bg \"partition\", calculate AUC respect validation background . default value .settings$validation.bg \"full\". NOTE: examining validation AUC discrimination metrics, \"full\" option likely result higher performance \"partition\" option varied background data lead higher discriminatory power model. Users thus make sure correctly interpreting evaluation results. 2. continuous Boyce index (always) AICc (raster provided) calculated using predicted values SpatRaster delineating full study extent, instead using predicted values background records. decision use background calculating continuous Boyce index made simplify code improve running time. decision AICc made order allow AICc calculations datasets include raster data. See ?calc.aicc details, caveats calculating AICc without raster data (mainly, background adequately represent occurrence records, users use raster approach, reasons explained calc.aicc documentation). metrics, background records good representation study extent, much difference approach using background data approach uses rasters. 3. running ENMevaluate() without raster data, instead adding environmental predictor values occurrence background data tables, users may notice differences results. Occurrence records share raster grid cell automatically removed raster data provided, without raster data functionality operate, thus duplicate occurrence records can remain training data. Java implementation Maxent (maxent.jar implemented MaxEnt() R package predicts) automatically remove records, R implementation maxnet , envelope() function R package predicts well. Therefore, user remove records running ENMevaluate() raster data included. descriptions parameters used .settings, partition.settings, user.eval arguments. .settings, options :* path - character: folder path designating maxent.jar files saved* removeduplicates - boolean: whether remove grid-cell duplicates occurrences (controls behavior maxent.jar ENMeval)* addsamplestobackground - boolean: whether add occurrences background modeling maxnet – default TRUE.* abs.auc.diff - boolean: TRUE, take absolute value AUCdiff (default: TRUE)* pred.type - character: specifies prediction type used generate maxnet maxent.jar prediction rasters (default: \"cloglog\").* validation.bg - character: either \"full\" calculate training validation AUC CBI cross-validation respect full background (default), \"partition\" (meant spatial partitions ) calculate respect partitioned background (.e., training occurrences compared training background, validation occurrences compared validation background).* .args - named list: additional model arguments specified tuning; can include arguments maxent.jar, described software's Help file, \"jackknife=TRUE\" variable importance jackknife plot \"responsecurves=TRUE\" response curve plots – note \"path\" must specified (see ). partition.settings, current options :* orientation - character: one \"lat_lon\" (default), \"lon_lat\", \"lat_lat\", \"lon_lon\" (required block partition).* aggregation.factor - numeric vector: one two numbers specifying factor aggregate envs (default: 2) raster assign partitions (required checkerboard partitions).* kfolds - numeric: number folds (.e., partitions) random partitions (default: 5). block partition, orientation specifications abbreviations \"latitude\" \"longitude\", determine order orientations block partitioning function creates partition groups. example, \"lat_lon\" split occurrence localities first latitude, longitude. checkerboard partitions, aggregation factor specifies much aggregate existing cells envs raster make new spatial partitions. example, 'basic' checkerboard aggregation factor value 2 make squares 4 times larger input rasters assign occurrence background records partition groups based square fall . Using two aggregation factors makes checkerboard partitions hierarchical, squares first aggregated define groups 'basic' checkerboard, second aggregation made separate resulting two bins four bins (see ?partitions details). user.eval, variables access order run custom function . See vignette worked example.* enm - ENMdetails object* occs.train.z - data frame: predictor variable values training occurrences* occs.val.z - data frame: predictor variable values validation occurrences* bg.train.z - data frame: predictor variable values training background* bg.val.z - data frame: predictor variable values validation background* mod.k - Model object current partition (k)* nk - numeric: number folds (.e., partitions)* .settings - named list: settings specified ENMevaluate()* partitions - character: name partition method (e.g., \"block\")* occs.train.pred - numeric: predictions made mod.k training occurrences* occs.val.pred - numeric: predictions made mod.k validation occurrences* bg.train.pred - numeric: predictions made mod.k training background* bg.val.pred - numeric: predictions made mod.k validation background","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tune ecological niche model (ENM) settings and calculate evaluation statistics — ENMevaluate","text":"Muscarella, R., Galante, P. J., Soley-Guardia, M., Boria, R. ., Kass, J. M., Uriarte, M., & Anderson, R. P. (2014). ENMeval: R package conducting spatially independent evaluations estimating optimal model complexity Maxent ecological niche models. Methods Ecology Evolution, 5: 1198-1205. doi:10.1111/2041-210X.12261 Warren, D. L., Glor, R. E., Turelli, M. & Funk, D. (2008) Environmental niche equivalency versus conservatism: quantitative approaches niche evolution. Evolution, 62: 2868-2883. doi:10.1111/j.1558-5646.2008.00482.x","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tune ecological niche model (ENM) settings and calculate evaluation statistics — ENMevaluate","text":"","code":"if (FALSE) { # \\dontrun{ library(terra) library(ENMeval)  occs <- read.csv(file.path(system.file(package=\"predicts\"),  \"/ex/bradypus.csv\"))[,2:3] envs <- rast(list.files(path=paste(system.file(package=\"predicts\"),  \"/ex\", sep=\"\"), pattern=\"tif$\", full.names=TRUE)) occs.z <- cbind(occs, extract(envs, occs, ID = FALSE)) occs.z$biome <- factor(occs.z$biome) bg <- as.data.frame(predicts::backgroundSample(envs, n = 10000)) names(bg) <- names(occs) bg.z <- cbind(bg, extract(envs, bg, ID = FALSE)) bg.z$biome <- factor(bg.z$biome)  # set other.settings -- pred.type is only for Maxent models os <- list(abs.auc.diff = FALSE, pred.type = \"cloglog\",  validation.bg = \"partition\") # set partition.settings -- here's an example for the block method # see Details for the required settings for other partition methods ps <- list(orientation = \"lat_lat\")  # here's a run with maxnet -- note the tune.args for feature classes (fc) # and regularization multipliers (rm), as well as the designation of the # categorical variable we are using (this can be a vector if multiple # categorical variables are used) e.maxnet <- ENMevaluate(occs, envs, bg,  tune.args = list(fc = c(\"L\",\"LQ\",\"LQH\",\"H\"), rm = 1:5),  partitions = \"block\", other.settings = os, partition.settings = ps, algorithm = \"maxnet\", categoricals = \"biome\", overlap = TRUE)  # print the tuning results eval.results(e.maxnet)  # you can plot the marginal response curves of a maxnet object with plot(),  # and you can also extract the data for plotting to make your own custom plots mods.maxnet <- eval.models(e.maxnet) m <- mods.maxnet$fc.LQH_rm.2 plot(m, type = \"cloglog\") rcurve_data <- maxnet::response.plot(m, \"bio1\", type = \"cloglog\", plot = FALSE)  # there is currently no native function to make raster model predictions for # maxnet models, but ENMeval can be used to make them like this: # here's an example where we make a prediction based on the L2 model # (feature class: Linear, regularization multiplier: 2) for our envs data pred.LQH2 <- maxnet.predictRaster(m, envs) plot(pred.L2)  # here's a run with maxent.jar -- note that if the R package rJava cannot  # install or load, or if you have other issues with Java on your computer,  # maxent.jar will not function e.maxent.jar <- ENMevaluate(occs, envs, bg,  tune.args = list(fc = c(\"L\",\"LQ\",\"LQH\",\"H\"), rm = 1:5),  partitions = \"block\", other.settings = os, partition.settings = ps, algorithm = \"maxent.jar\", categoricals = \"biome\", overlap = TRUE)  # here's a run of maxent.jar with a path specified for saving the html and  # plot files -- you can also turn on jackknife variable importance or  # response curves, etc., to have these plots saved there e.maxent.jar <- ENMevaluate(occs, envs, bg,  tune.args = list(fc = c(\"L\",\"LQ\",\"LQH\",\"H\"), rm = 1:5),  partitions = \"block\", partition.settings = ps, algorithm = \"maxent.jar\", categoricals = \"biome\", overlap = TRUE, other.settings = list(path = \"analyses/mxnt_results\",  other.args = c(\"jackknife=TRUE\", \"responsecurves=TRUE\")))  # print the tuning results eval.results(e.maxent.jar)  # raster predictions can be made for maxent.jar models with predicts or  # ENMeval mods.maxent.jar <- eval.models(e.maxent.jar) pred.L2 <- predict(mods.maxent.jar$fc.L_rm.2, envs,  args = \"outputform=cloglog\") pred.L2 <- maxnet.predictRaster(mods.maxent.jar$fc.L_rm.2, envs, os) plot(pred.L2)  # this will give you the percent contribution (not deterministic) and # permutation importance (deterministic) values of variable importance for # Maxent models, and it only works with maxent.jar eval.variable.importance(e.maxent.jar)  # here's a run with BIOCLIM. Note that we need to remove the categorical # variable here because this algorithm only takes continuous variables. We  # also should point out that the way BIOCLIM is tuned is by comparing  # performance for different ways to make predictions (as opposed to comparing  # performance for models fit in different ways like for maxnet or maxent.jar).  # Namely, BIOCLIM can ignore different tails of the distribution when making  # predictions, and this is what is tuned in ENMevaluate (see  # ?predicts::envelope).  # print the tuning results eval.results(e.bioclim) # make raster predictions with predicts or ENMeval mods.bioclim <- eval.models(e.bioclim) # note: the models for low, high, and both are actually all the same, and # the only difference for tuning is how they are predicted during # cross-validation pred.both <- predict(mods.bioclim$tails.both, envs, tails = \"both\") plot(pred.both)  # please see the vignette for more examples of model tuning,  # partitioning, plotting functions, and null models # https://jamiemkass.github.io/ENMeval/articles/ENMeval-2.0-vignette.html } # }"},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation.html","id":null,"dir":"Reference","previous_headings":"","what":"ENMevaluation class — ENMevaluation-class","title":"ENMevaluation class — ENMevaluation-class","text":"S4 class contains ENMevaluate results.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ENMevaluation class — ENMevaluation-class","text":"","code":"# S4 method for class 'ENMevaluation' show(object)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ENMevaluation class — ENMevaluation-class","text":"object ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ENMevaluation class — ENMevaluation-class","text":"following brief descriptions columns results table, prints accessing `e@results` `results(e)` `e` ENMevaluation object. columns represent evaluations validation data (__.val.__) end either \"avg\" (average metric across models trained withheld data cross-validation) \"sd\" (standard deviation metric across models).* fc = feature class* rm = regularization multiplier* tune.args = combination arguments define complexity settings used tuning (.e., fc rm Maxent)* auc.train = AUC calculated full dataset* cbi.train = Continuous Boyce Index calculated full dataset* auc.val = average/sd AUC calculated validation datasets (data withheld cross-validation)* auc.diff = average/sd difference auc.train auc.val* .mtp = average/sd omission rate threshold minimum suitability value across occurrence records* .10p = average/sd omission rate threshold minimum suitability value across occurrence records removing lowest 10 cbi.val = average/sd Continuous Boyce Index calculated validation datasets (data withheld cross-validation)* AICc = AIC corrected small sample sizes* delta.AICc = highest AICc value across models minus model's AICc value, lower values mean higher performance 0 highest performing model* w.AIC = AIC weights, calculated exp( -0.5 * delta.AIC), higher values mean higher performance* ncoef = number non-zero beta values (model coefficients)","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ENMevaluation class — ENMevaluation-class","text":"algorithm character: algorithm used tune.settings data frame: settings tuned partition.method character: partition method used partition.settings list: partition settings used (.e., value *k* aggregation factor) .settings list: modeling settings used (.e., decisions clamping, AUC diff calculation) doClamp logical: whether clamping used clamp.directions list: clamping directions specified results data frame: evaluation summary statistics results.partitions data frame: evaluation k-fold statistics models list: model objects variable.importance list: variable importance data frames (available) predictions SpatRaster: model predictions taxon.name character: name focal taxon (optional) occs data frame: occurrence coordinates predictor variable values used model training occs.testing data frame: provided, coordinates fully-withheld testing records occs.grp vector: partition groups occurrence points bg data frame: background coordinates predictor variable values used model training bg.grp vector: partition groups background points overlap list: matrices pairwise niche overlap statistics rmm list: rangeModelMetadata objects model","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ENMevaluation class — ENMevaluation-class","text":"references performance metrics, see following: general ENMeval: Muscarella, R., Galante, P. J., Soley-Guardia, M., Boria, R. ., Kass, J. M., Uriarte, M., & Anderson, R. P. (2014). ENMeval: R package conducting spatially independent evaluations estimating optimal model complexity Maxent ecological niche models. Methods Ecology Evolution, 5: 1198-1205. doi:10.1111/2041-210X.12261 AUC Fielding, . H., & Bell, J. F. (1997). review methods assessment prediction errors conservation presence/absence models. Environmental Conservation, 24: 38-49. doi:10.1017/S0376892997000088 Jiménez‐Valverde, . (2012). Insights area receiver operating characteristic curve (AUC) discrimination measure species distribution modelling. Global Ecology Biogeography, 21: 498-507. doi:10.1111/j.1466-8238.2011.00683.x AUC diff Warren, D. L., Glor, R. E., Turelli, M. & Funk, D. (2008) Environmental niche equivalency versus conservatism: quantitative approaches niche evolution. Evolution, 62: 2868-2883. doi:10.1111/j.1558-5646.2008.00482.x Radosavljevic, ., & Anderson, R. P. (2014). Making better Maxent models species distributions: complexity, overfitting evaluation. Journal Biogeography, 41(4), 629-643. doi:10.1111/jbi.12227 Omission rates Radosavljevic, ., & Anderson, R. P. (2014). Making better Maxent models species distributions: complexity, overfitting evaluation. Journal Biogeography, 41(4), 629-643. doi:10.1111/jbi.12227 Continuous Boyce Index Hirzel, . H., Le Lay, G., Helfer, V., Randin, C., & Guisan, . (2006). Evaluating ability habitat suitability models predict species presences. Ecological Modelling, 199: 142-152. doi:10.1016/j.ecolmodel.2006.05.017","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ENMevaluation class — ENMevaluation-class","text":"Jamie M. Kass, jamie.m.kass@gmail.com, Bob Muscarella, bob.muscarella@gmail.com","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert old ENMevaluation objects to new ones — ENMevaluation_convert","title":"Convert old ENMevaluation objects to new ones — ENMevaluation_convert","text":"Converts ENMevaluation objects made version <=0.3.1 new ones made version >=2.0.0.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert old ENMevaluation objects to new ones — ENMevaluation_convert","text":"","code":"ENMevaluation_convert(e, envs)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert old ENMevaluation objects to new ones — ENMevaluation_convert","text":"e ENMevaluation object: old object convert envs SpatRaster: original predictor variables used generate old ENMevaluation object (used make new occs bg slots contain predictor variable values)","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMevaluation_convert.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert old ENMevaluation objects to new ones — ENMevaluation_convert","text":"bin.output set TRUE, `e@results` equivalent new results.partitions slot. slots unable filled previous versions ENMeval record ENMevaluation objects: variable.importance, partition.settings, .settings, doClamp (set TRUE arbitrarily avoid errors, may actually FALSE), clamp.directions, taxon.name, rmm.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnull.html","id":null,"dir":"Reference","previous_headings":"","what":"ENMnull class — ENMnull-class","title":"ENMnull class — ENMnull-class","text":"S4 class contains ENMnulls results.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ENMnull class — ENMnull-class","text":"","code":"# S4 method for class 'ENMnull' show(object)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ENMnull class — ENMnull-class","text":"object ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnull.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ENMnull class — ENMnull-class","text":"null.algorithm character: algorithm used null.mod.settings data frame: model settings used null.partition.method character: partition method used null.partition.settings list: partition settings used (.e., value *k* aggregation factor) null.doClamp logical: whether clamp model predictions null..settings list: modeling settings used (.e., decisions clamping, AUC diff calculation) null..iter numeric: number null model iterations null.results data frame: evaluation summary statistics null models null.results.partitions data frame: evaluation k-fold statistics null models null.emp.results data frame: evaluation summary statistics empirical model, means null models, z-scores, p-values emp.occs data frame: occurrence coordinates predictor variable values used model training (empirical model) emp.occs.grp vector: partition groups occurrence points (empirical model) emp.bg data frame: background coordinates predictor variable values used model training (empirical model) emp.bg.grp vector: partition groups background points (empirical model)","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnull.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ENMnull class — ENMnull-class","text":"Jamie M. Kass, jamie.m.kass@gmail.com, Corentin Bohl, corentinbohl@gmail.com","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnulls.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate null ecological niche models (ENMs) and compare null with empirical performance metrics — ENMnulls","title":"Generate null ecological niche models (ENMs) and compare null with empirical performance metrics — ENMnulls","text":"ENMnulls() iteratively builds null ENMs single set user-specified model settings based input ENMevaluation object, analysis settings extracted. Summary statistics performance metrics null ENMs taken (averages standard deviations) effect sizes p-values calculated comparing summary statistics empirical values performance metrics (.e., model built empirical data). See references details method.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnulls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate null ecological niche models (ENMs) and compare null with empirical performance metrics — ENMnulls","text":"","code":"ENMnulls(   e,   mod.settings,   no.iter,   eval.stats = c(\"auc.val\", \"auc.diff\", \"cbi.val\", \"or.mtp\", \"or.10p\"),   user.enm = NULL,   user.eval = NULL,   user.eval.type = NULL,   userStats.signs = NULL,   removeMxTemp = TRUE,   parallel = FALSE,   numCores = NULL,   quiet = FALSE )"},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnulls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate null ecological niche models (ENMs) and compare null with empirical performance metrics — ENMnulls","text":"e ENMevaluation object mod.settings named list: one set model settings build null ENMs. .iter numeric: number null model iterations. eval.stats character vector: performance metrics used calculate null model statistics. user.enm ENMdetails object: implementing user-specified model. user.eval function: custom function specifying performance metrics included ENMeval. function must first defined input argument user.eval. user.eval.type character: implementing user-specified model, specify evaluation type use – either \"knonspatial\", \"kspatial\", \"testing\", \"none\". userStats.signs named list: user-defined evaluation statistics attributed either 1 -1 designate whether expected difference empirical null models positive negative; used calculate p-value z-score. example, AUC, difference positive (empirical model higher score), whereas omission rate negative (empirical model lower score). removeMxTemp boolean: TRUE, delete temporary data generated using maxent.jar modeling. parallel boolean: TRUE, use parallel processing. numCores numeric: number cores use parallel processing; NULL, available cores used. quiet boolean: TRUE, silence function messages (errors).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnulls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate null ecological niche models (ENMs) and compare null with empirical performance metrics — ENMnulls","text":"ENMnull object slots containing evaluation summary statistics null models cross-validation results, well differences results empirical null models. comparison table includes z-scores differences associated p-values (normal distribution). See ?ENMnull details.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnulls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate null ecological niche models (ENMs) and compare null with empirical performance metrics — ENMnulls","text":"null ENM technique based implementation Bohl et al. (2019), follows original methodology Raes & ter Steege (2007) makes important modification: instead evaluating null model random validation data, evaluate null models withheld validation data used evaluate empirical model. Bohl et al. (2019) demonstrates approach using single defined withheld partition group, Kass et al. (2020) extended use spatial partitions drawing null occurrences area predictor raster data defining partition. Please see vignette brief example. function avoids using raster data speed iteration, instead samples null occurrences partitioned background records. Thus, avoid running background records well sampled across study extent, limits extent null occurrences can sampled .","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnulls.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate null ecological niche models (ENMs) and compare null with empirical performance metrics — ENMnulls","text":"Bohl, C. L., Kass, J. M., & Anderson, R. P. (2019). new null model approach quantify performance significance ecological niche models species distributions. Journal Biogeography, 46: 1101-1111. doi:10.1111/jbi.13573 Kass, J. M., Anderson, R. P., Espinosa-Lucas, ., Juárez-Jaimes, V., Martínez-Salas, E., Botello, F.,  Tavera, G., Flores-Martínez, J. J., & Sánchez-Cordero, V. (2020). Biotic predictors phenological information improve range estimates migrating monarch butterflies Mexico. Ecography, 43: 341-352. doi:10.1111/ecog.04886 Raes, N., & ter Steege, H. (2007). null-model significance testing presence-species distribution models. Ecography, 30: 727-736. doi:10.1111/j.2007.0906-7590.05041.x","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/ENMnulls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate null ecological niche models (ENMs) and compare null with empirical performance metrics — ENMnulls","text":"","code":"if (FALSE) { # \\dontrun{ library(ENMeval)  # first, let's tune some models occs <- read.csv(file.path(system.file(package=\"predicts\"),  \"/ex/bradypus.csv\"))[,2:3] envs <- rast(list.files(path=paste(system.file(package=\"predicts\"),                                     \"/ex\", sep=\"\"), pattern=\"tif$\",                                     full.names=TRUE)) bg <- as.data.frame(predicts::backgroundSample(envs, n = 10000)) names(bg) <- names(occs)  ps <- list(orientation = \"lat_lat\")  # as an example, let's use two user-specified evaluation metrics conf.and.cons <- function(vars) {   observations <- c(     rep(x = 1, times = length(vars$occs.train.pred)),     rep(x = 0, times = length(vars$bg.train.pred)),     rep(x = 1, times = length(vars$occs.val.pred)),     rep(x = 0, times = length(vars$bg.val.pred))   )   predictions <- c(vars$occs.train.pred, vars$bg.train.pred,    vars$occs.val.pred, vars$bg.val.pred)   evaluation_mask <- c(     rep(x = FALSE, times = length(vars$occs.train.pred) +      length(vars$bg.train.pred)),     rep(x = TRUE, times = length(vars$occs.val.pred) +      length(vars$bg.val.pred))   )   measures <- confcons::measures(observations = observations,    predictions = predictions,    evaluation_mask = evaluation_mask, df = TRUE)   measures.metrics <- measures[, c(\"CPP_eval\", \"DCPP\")]   colnames(measures.metrics) <- c(\"confidence\", \"consistency\")   return(measures.metrics) }  e <- ENMevaluate(occs, envs, bg,                   tune.args = list(fc = c(\"L\",\"LQ\",\"LQH\"), rm = 2:4),                   partitions = \"block\", partition.settings = ps,                   algorithm = \"maxnet\", categoricals = \"biome\",                  user.eval  = conf.and.cons, parallel = TRUE)  d <- eval.results(e)  # here, we will choose an optimal model based on validation CBI, but you can # choose yourself what evaluation statistics to use opt <- d |> filter(cbi.val.avg == max(cbi.val.avg))  # now we can run our null models, and we can specify to include estimates for # our user-specified variables too, but we need to make sure we note what  # sign we expect these statistics to be  # NOTE: you should use at least 100 iterations in practice -- this is just an # example nulls <- ENMnulls(e,                    mod.settings = list(fc = opt$fc, rm = opt$rm),                   no.iter = 10,                    user.eval = conf.and.cons,                   eval.stats = c(\"cbi.val\", \"confidence\", \"consistency\"),                   userStats.signs = c(\"confidence\" = 1, \"consistency\" = 1))  # here are the results of all the null iterations null.results(nulls) # and here are the comparisons between the null and empirical values for # the evaluation statistics, including the z-score and p-value # for more details, see Bohl et al. 2019 null.emp.results(nulls) } # }"},{"path":"https://jamiemkass.github.io/ENMeval/reference/aic.maxent.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate AICc from Maxent model prediction — aic.maxent","title":"Calculate AICc from Maxent model prediction — aic.maxent","text":"function calculates AICc Maxent models based Warren Seifert (2011).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/aic.maxent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate AICc from Maxent model prediction — aic.maxent","text":"","code":"aic.maxent(p.occs, ncoefs, p = NULL)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/aic.maxent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate AICc from Maxent model prediction — aic.maxent","text":"p.occs data frame: raw (maxent.jar) exponential (maxnet) predictions occurrence localities based one models ncoefs numeric: number non-zero model coefficients p SpatRaster: raw (maxent.jar) exponential (maxnet) model predictions; NULL, AICc calculated based background points, already predictions sum 1 thus need correction – assumes background points represent good sample study extent","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/aic.maxent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate AICc from Maxent model prediction — aic.maxent","text":"data frame three columns: AICc Akaike Information Criterion corrected small sample sizes calculated : $$ (2 * K - 2 * logLikelihood) + (2 * K) * (K+1) / (n - K - 1)$$ K number non-zero coefficients model n number occurrence localities.  logLikelihood calculated : $$ sum(log(vals))$$ vals vector Maxent raw/exponential values occurrence localities sum values across study extent equal 1. delta.AICc difference AICc given model AICc model lowest AICc. w.AICc Akaike weight (calculated relative likelihood model (exp(-0.5 * delta.AICc)) divided sum likelihood values models included run.  can used model averaging (Burnham Anderson 2002).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/aic.maxent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate AICc from Maxent model prediction — aic.maxent","text":"motivated Warren Seifert (2011) implemented ENMTools (Warren et al. 2010), function calculates small sample size version Akaike Information Criterion ENMs (Akaike 1974). use AICc (instead AIC) regardless sample size based recommendation Burnham Anderson (1998, 2004).  number coefficients determined counting number non-zero coefficients maxent lambda file (m@lambdas maxent.jar m$betas maxnet. See Warren et al. (2014) limitations approach, namely number non-zero coefficients estimate true degrees freedom. Maxent ENMs, AICc calculated first standardizing raw predictions cells study extent sum 1, extracting occurrence record predictions. predictions study extent may sum 1 background cover every grid cell – background predictions sum 1 definition, extra predictions grid cells training data add sum. raster data provided, raw predictions occurrence records used calculate AICc without standardization, assumption background records adequately represented occurrence records. standardization necessary background predictions sum 1 already, occurrence data subset background. true background adequately represent occurrence records, case occurrences subset background raster approach used instead. likelihood data given model calculated taking product raw occurrence predictions (Warren Seifert 2011), sum logs, implemented .","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/aic.maxent.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate AICc from Maxent model prediction — aic.maxent","text":"Returns NAs number non-zero coefficients larger number observations (occurrence localities).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/aic.maxent.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate AICc from Maxent model prediction — aic.maxent","text":"Akaike, H. (1974) new look statistical model identification. IEEE Transactions Automatic Control, 19: 716-723. doi:10.1109/TAC.1974.1100705 Burnham, K. P. Anderson, D. R. (1998) Model selection multimodel inference: practical information-theoretic approach. Springer, New York. Burnham, K. P. Anderson, D. R. (2004) Multimodel inference: understanding AIC BIC model selection. Sociological Methods Research, 33: 261-304. doi:10.1177/0049124104268644 Warren, D. L., Glor, R. E, Turelli, M. (2010) ENMTools: toolbox comparative studies environmental niche models. Ecography, 33: 607-611. doi:10.1111/j.1600-0587.2009.06142.x Warren, D. L., & Seifert, S. N. (2011). Ecological niche modeling Maxent: importance model complexity performance model selection criteria. Ecological Applications, 21: 335-342. doi:10.1890/10-1171.1 Warren, D. L., Wright, . N., Seifert, S. N., Shaffer, H. B. (2014). Incorporating model complexity sampling bias ecological niche models climate change risks faced 90 California vertebrate species concern. Diversity Distributions, 20: 334-343. doi:10.1111/ddi.12160","code":""},{"path":[]},{"path":"https://jamiemkass.github.io/ENMeval/reference/buildRMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Build metadata object from ENMeval results — buildRMM","title":"Build metadata object from ENMeval results — buildRMM","text":"Builds rangeModelMetadata object output ENMevaluate. See Merow et al. (2019) details nature metadata rangeModelMetadata package. improve reproducibility study, metadata object can used supplemental information manuscript, shared collaborators, etc.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/buildRMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build metadata object from ENMeval results — buildRMM","text":"","code":"buildRMM(e, envs, rmm = NULL)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/buildRMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build metadata object from ENMeval results — buildRMM","text":"e ENMevaluation object envs SpatRaster: environmental predictor variables used analysis; needed pull information predictor variables included ENMevaluation object rmm rangeModelMetadata object: included, fields appended RMM object opposed returning new RMM object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/buildRMM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Build metadata object from ENMeval results — buildRMM","text":"Merow, C., Maitner, B. S., Owens, H. L., Kass, J. M., Enquist, B. J., Jetz, W., & Guralnick, R. (2019). Species' range model metadata standards: RMMS. Global Ecology Biogeography, 28: 1912-1924. doi:10.1111/geb.12993","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/bvariegatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Example occurrence dataset. — bvariegatus","title":"Example occurrence dataset. — bvariegatus","text":"example occurrence dataset Brown Throated Sloth (Bradypus variegatus) downloaded GBIF spocc package.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/bvariegatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example occurrence dataset. — bvariegatus","text":"","code":"bvariegatus"},{"path":"https://jamiemkass.github.io/ENMeval/reference/bvariegatus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example occurrence dataset. — bvariegatus","text":"data frame 476 rows 2 variables: longitude longitude coordinate (x). latitude latitude coordinate (y).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/bvariegatus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example occurrence dataset. — bvariegatus","text":"https://www.gbif.org/","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.10p.trainThresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate 10 percentile threshold — calc.10p.trainThresh","title":"Calculate 10 percentile threshold — calc.10p.trainThresh","text":"Function calculate 10 percentile threshold training predictions","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.10p.trainThresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate 10 percentile threshold — calc.10p.trainThresh","text":"","code":"calc.10p.trainThresh(pred.train)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.10p.trainThresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate 10 percentile threshold — calc.10p.trainThresh","text":"pred.train numeric vector: training occurrence predictions","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.niche.overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Similarity of ENMs in Geographic Space — calc.niche.overlap","title":"Calculate Similarity of ENMs in Geographic Space — calc.niche.overlap","text":"Compute pairwise \"niche overlap\" geographic space Maxent predictions. value ranges 0 (overlap) 1 (identical predictions).  function uses nicheOverlap function dismo package (Hijmans et al. 2011).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.niche.overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Similarity of ENMs in Geographic Space — calc.niche.overlap","text":"","code":"calc.niche.overlap(predictors, overlapStat, quiet = FALSE)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.niche.overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Similarity of ENMs in Geographic Space — calc.niche.overlap","text":"predictors SpatRaster: least 2 Maxent raster predictions overlapStat character: either \"D\" \"\", statistic calculated nicheOverlap function dismo package (default: \"D\"), updated terra correlate currently exists new predicts package quiet boolean: TRUE, silence function messages (errors)","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.niche.overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Similarity of ENMs in Geographic Space — calc.niche.overlap","text":"matrix lower triangle giving values pairwise \"niche overlap\" geographic space.  Row column names correspond results table output ENMevaluate().","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.niche.overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Similarity of ENMs in Geographic Space — calc.niche.overlap","text":"\"D\" refers Schoeners D (Schoener 1968), \"\" refers similarity statistic Warren et al. (2008).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.niche.overlap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Similarity of ENMs in Geographic Space — calc.niche.overlap","text":"Hijmans, R. J., Phillips, S., Leathwick, J. & Elith, J. (2011) dismo package R. Available online : https://cran.r-project.org/package=dismo. Schoener, T. W. (1968) Anolis lizards Bimini: resource partitioning complex fauna. Ecology, 49: 704-726. doi:10.2307/1935534 Warren, D. L., Glor, R. E., Turelli, M. & Funk, D. (2008) Environmental niche equivalency versus conservatism: quantitative approaches niche evolution. Evolution, 62: 2868-2883. doi:10.1111/j.1558-5646.2008.00482.x","code":""},{"path":[]},{"path":"https://jamiemkass.github.io/ENMeval/reference/calc.niche.overlap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Similarity of ENMs in Geographic Space — calc.niche.overlap","text":"Based dismo::nicheOverlap, based SDMTools::Istat, updated terra package Robert Muscarella <bob.muscarella@gmail.com>","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/clamp.vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Clamp predictor variables — clamp.vars","title":"Clamp predictor variables — clamp.vars","text":"function restricts values one predictor variable rasters stay within bounds input occurrence background data (argument \"ref.vals\"). termed \"clamping\", mainly used avoid making extreme extrapolations making model predictions environmental conditions outside range occurrence / background data used train model. Clamping can done variables choice one tails distributions (.e., arguments \"left\" \"right\" minimum maximum clamps, respectively). \"left\" /\"right\" specified left default NULL, function clamp variables tail (thus, function default clamp variables sides). turn clamping one side, enter \"none\" either \"left\" \"right\". Categorical variables need declared argument \"categoricals\". variables excluded clamping analysis, put back SpatRaster returned.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/clamp.vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clamp predictor variables — clamp.vars","text":"","code":"clamp.vars(orig.vals, ref.vals, left = NULL, right = NULL, categoricals = NULL)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/clamp.vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clamp predictor variables — clamp.vars","text":"orig.vals SpatRaster / matrix / data frame: environmental predictor variables (must geographic projection occurrence data), predictor variables values original records ref.vals matrix / data frame: predictor variable values reference records (including coordinates), used determine minimums maximums – ideally occurrences + background (can made terra::extract()) left character vector: names variables get minimum clamp; can \"none\" turn minimum clamping right character vector: names variables get maximum clamp, can \"none\" turn maximum clamping categoricals character vector: name names categorical environmental variables","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/clamp.vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clamp predictor variables — clamp.vars","text":"clamped SpatRaster object.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/clamp.vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clamp predictor variables — clamp.vars","text":"Stephen J. Phillips, Jamie M. Kass, Gonzalo Pinilla-Buitrago","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/corrected.var.html","id":null,"dir":"Reference","previous_headings":"","what":"Corrected variance function — corrected.var","title":"Corrected variance function — corrected.var","text":"Calculate variance corrected non-independence k-fold iterations","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/corrected.var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Corrected variance function — corrected.var","text":"","code":"corrected.var(x, nk)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/corrected.var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Corrected variance function — corrected.var","text":"x numeric vector: input values nk numeric: number k-fold iterations","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/corrected.var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Corrected variance function — corrected.var","text":"numeric value corrected variance.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/corrected.var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Corrected variance function — corrected.var","text":"`corrected.var` calculates variance corrected non-independence k-fold iterations. See Appendix Shcheglovitova & Anderson (2013) references (Miller 1974; Parr 1985; Shao Wu 1989) additional details. function calculates variance corrected non-independence k cross-validation iterations. Following Shao Wu (1989): $$Sum Squares * ((n-1)/n)$$ n = number k-fold iterations.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/corrected.var.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Corrected variance function — corrected.var","text":"Miller, R. G. (1974) jackknife - review. Biometrika, 61: 1-15. doi:10.1093/biomet/61.1.1 Parr, W. C. (1985) Jackknifing differentiable statistical functionals. Journal Royal Statistics Society, Series B, 47: 56-66. doi:10.1111/j.2517-6161.1985.tb01330.x Shao J. Wu, C. F. J. (1989) general theory jackknife variance estimation. Annals Statistics, 17: 1176-1197. doi:10.1214/aos/1176347263 Shcheglovitova, M. Anderson, R. P. (2013) Estimating optimal complexity ecological niche models: jackknife approach species small sample sizes. Ecological Modelling, 269: 9-17. doi:10.1016/j.ecolmodel.2013.08.011","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/corrected.var.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Corrected variance function — corrected.var","text":"Robert Muscarella <bob.muscarella@gmail.com>","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.bg.grp.html","id":null,"dir":"Reference","previous_headings":"","what":"emp.bg.grp generic for ENMnull object — emp.bg.grp","title":"emp.bg.grp generic for ENMnull object — emp.bg.grp","text":"emp.bg.grp generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.bg.grp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"emp.bg.grp generic for ENMnull object — emp.bg.grp","text":"","code":"emp.bg.grp(x)  # S4 method for class 'ENMnull' emp.bg.grp(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.bg.grp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"emp.bg.grp generic for ENMnull object — emp.bg.grp","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.bg.html","id":null,"dir":"Reference","previous_headings":"","what":"emp.bg generic for ENMnull object — emp.bg","title":"emp.bg generic for ENMnull object — emp.bg","text":"emp.bg generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.bg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"emp.bg generic for ENMnull object — emp.bg","text":"","code":"emp.bg(x)  # S4 method for class 'ENMnull' emp.bg(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.bg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"emp.bg generic for ENMnull object — emp.bg","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.occs.grp.html","id":null,"dir":"Reference","previous_headings":"","what":"emp.occs.grp generic for ENMnull object — emp.occs.grp","title":"emp.occs.grp generic for ENMnull object — emp.occs.grp","text":"emp.occs.grp generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.occs.grp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"emp.occs.grp generic for ENMnull object — emp.occs.grp","text":"","code":"emp.occs.grp(x)  # S4 method for class 'ENMnull' emp.occs.grp(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.occs.grp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"emp.occs.grp generic for ENMnull object — emp.occs.grp","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.occs.html","id":null,"dir":"Reference","previous_headings":"","what":"emp.occs generic for ENMnull object — emp.occs","title":"emp.occs generic for ENMnull object — emp.occs","text":"emp.occs generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.occs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"emp.occs generic for ENMnull object — emp.occs","text":"","code":"emp.occs(x)  # S4 method for class 'ENMnull' emp.occs(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/emp.occs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"emp.occs generic for ENMnull object — emp.occs","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.args.html","id":null,"dir":"Reference","previous_headings":"","what":"enm.args generic for ENMdetails object — enm.args","title":"enm.args generic for ENMdetails object — enm.args","text":"enm.args generic ENMdetails object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enm.args generic for ENMdetails object — enm.args","text":"","code":"enm.args(x)  enm.args(x) <- value  # S4 method for class 'ENMdetails' enm.args(x)  # S4 method for class 'ENMdetails' enm.args(x) <- value"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enm.args generic for ENMdetails object — enm.args","text":"x ENMdetails object value input value","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.bioclim.html","id":null,"dir":"Reference","previous_headings":"","what":"ENMdetails bioclim — enm.bioclim","title":"ENMdetails bioclim — enm.bioclim","text":"ENMdetails implementation BIOCLIM climate envelope model, implemented predicts.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.bioclim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ENMdetails bioclim — enm.bioclim","text":"","code":"enm.bioclim"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.bioclim.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ENMdetails bioclim — enm.bioclim","text":"object class ENMdetails length 1.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.errors.html","id":null,"dir":"Reference","previous_headings":"","what":"enm.errors generic for ENMdetails object — enm.errors","title":"enm.errors generic for ENMdetails object — enm.errors","text":"enm.errors generic ENMdetails object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.errors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enm.errors generic for ENMdetails object — enm.errors","text":"","code":"enm.errors(x)  enm.errors(x) <- value  # S4 method for class 'ENMdetails' enm.errors(x)  # S4 method for class 'ENMdetails' enm.errors(x) <- value"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.errors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enm.errors generic for ENMdetails object — enm.errors","text":"x ENMdetails object value input value","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.fun.html","id":null,"dir":"Reference","previous_headings":"","what":"enm.fun generic for ENMdetails object — enm.fun","title":"enm.fun generic for ENMdetails object — enm.fun","text":"enm.fun generic ENMdetails object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enm.fun generic for ENMdetails object — enm.fun","text":"","code":"enm.fun(x)  enm.fun(x) <- value  # S4 method for class 'ENMdetails' enm.fun(x)  # S4 method for class 'ENMdetails' enm.fun(x) <- value"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enm.fun generic for ENMdetails object — enm.fun","text":"x ENMdetails object value input value","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.maxent.jar.html","id":null,"dir":"Reference","previous_headings":"","what":"ENMdetails maxent.jar — enm.maxent.jar","title":"ENMdetails maxent.jar — enm.maxent.jar","text":"ENMdetails implementation maxent.jar, Java version Maxent algorithm. configuration running model differs slightly previous versions ENMeval (0.3.0 ) version (>=2.0.0) uses default adding presences background model training, previous versions turned . Specifically, previous versions ran maxent() \"noaddsamplestobackground\" \"args\" vector argument, version .","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.maxent.jar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ENMdetails maxent.jar — enm.maxent.jar","text":"","code":"enm.maxent.jar"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.maxent.jar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ENMdetails maxent.jar — enm.maxent.jar","text":"object class ENMdetails length 1.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.maxnet.html","id":null,"dir":"Reference","previous_headings":"","what":"ENMdetails maxnet — enm.maxnet","title":"ENMdetails maxnet — enm.maxnet","text":"ENMdetails implementation maxnet, R version Maxent algorithm. configuration running model now includes addsamplestobackground = TRUE, explicitly adds presences background model training, though current version maxnet set TRUE default, behavior ENMeval versions differ.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.maxnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ENMdetails maxnet — enm.maxnet","text":"","code":"enm.maxnet"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.maxnet.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ENMdetails maxnet — enm.maxnet","text":"object class ENMdetails length 1.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.msgs.html","id":null,"dir":"Reference","previous_headings":"","what":"enm.msgs generic for ENMdetails object — enm.msgs","title":"enm.msgs generic for ENMdetails object — enm.msgs","text":"enm.msgs generic ENMdetails object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.msgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enm.msgs generic for ENMdetails object — enm.msgs","text":"","code":"enm.msgs(x)  enm.msgs(x) <- value  # S4 method for class 'ENMdetails' enm.msgs(x)  # S4 method for class 'ENMdetails' enm.msgs(x) <- value"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.msgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enm.msgs generic for ENMdetails object — enm.msgs","text":"x ENMdetails object value input value","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.name.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.name generic for ENMdetails object — enm.name","title":"eval.name generic for ENMdetails object — enm.name","text":"eval.name generic ENMdetails object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.name generic for ENMdetails object — enm.name","text":"","code":"enm.name(x)  enm.name(x) <- value  # S4 method for class 'ENMdetails' enm.name(x)  # S4 method for class 'ENMdetails' enm.name(x) <- value"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.name generic for ENMdetails object — enm.name","text":"x ENMdetails object value input value","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.ncoefs.html","id":null,"dir":"Reference","previous_headings":"","what":"enm.ncoefs generic for ENMdetails object — enm.ncoefs","title":"enm.ncoefs generic for ENMdetails object — enm.ncoefs","text":"enm.ncoefs generic ENMdetails object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.ncoefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enm.ncoefs generic for ENMdetails object — enm.ncoefs","text":"","code":"enm.ncoefs(x)  enm.ncoefs(x) <- value  # S4 method for class 'ENMdetails' enm.ncoefs(x)  # S4 method for class 'ENMdetails' enm.ncoefs(x) <- value"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.ncoefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enm.ncoefs generic for ENMdetails object — enm.ncoefs","text":"x ENMdetails object value input value","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.predict.html","id":null,"dir":"Reference","previous_headings":"","what":"enm.predict generic for ENMdetails object — enm.predict","title":"enm.predict generic for ENMdetails object — enm.predict","text":"enm.predict generic ENMdetails object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enm.predict generic for ENMdetails object — enm.predict","text":"","code":"enm.predict(x)  enm.predict(x) <- value  # S4 method for class 'ENMdetails' enm.predict(x)  # S4 method for class 'ENMdetails' enm.predict(x) <- value"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enm.predict generic for ENMdetails object — enm.predict","text":"x ENMdetails object value input value","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.variable.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"enm.variable.importance generic for ENMdetails object — enm.variable.importance","title":"enm.variable.importance generic for ENMdetails object — enm.variable.importance","text":"enm.variable.importance generic ENMdetails object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.variable.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"enm.variable.importance generic for ENMdetails object — enm.variable.importance","text":"","code":"enm.variable.importance(x)  enm.variable.importance(x) <- value  # S4 method for class 'ENMdetails' enm.variable.importance(x)  # S4 method for class 'ENMdetails' enm.variable.importance(x) <- value"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enm.variable.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"enm.variable.importance generic for ENMdetails object — enm.variable.importance","text":"x ENMdetails object value input value","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enmeval_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Example ENMevaluation object. — enmeval_results","title":"Example ENMevaluation object. — enmeval_results","text":"example ENMevaluation object produced running ENMevaluate() feature classes L, LQ, LQH, H regularization multipliers 1 5. SpatRaster data predictions slot wrapped `terra::wrap` preserve connections raster data. use , following: `e@predictions <- terra::unwrap(e@predictions)`.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/enmeval_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example ENMevaluation object. — enmeval_results","text":"","code":"enmeval_results"},{"path":"https://jamiemkass.github.io/ENMeval/reference/enmeval_results.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example ENMevaluation object. — enmeval_results","text":"ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.algorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.algorithm generic for ENMevaluation object — eval.algorithm","title":"eval.algorithm generic for ENMevaluation object — eval.algorithm","text":"eval.algorithm generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.algorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.algorithm generic for ENMevaluation object — eval.algorithm","text":"","code":"eval.algorithm(x)  # S4 method for class 'ENMevaluation' eval.algorithm(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.algorithm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.algorithm generic for ENMevaluation object — eval.algorithm","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.bg.grp.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.bg.grp generic for ENMevaluation object — eval.bg.grp","title":"eval.bg.grp generic for ENMevaluation object — eval.bg.grp","text":"eval.bg.grp generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.bg.grp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.bg.grp generic for ENMevaluation object — eval.bg.grp","text":"","code":"eval.bg.grp(x)  # S4 method for class 'ENMevaluation' eval.bg.grp(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.bg.grp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.bg.grp generic for ENMevaluation object — eval.bg.grp","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.bg.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.bg generic for ENMevaluation object — eval.bg","title":"eval.bg generic for ENMevaluation object — eval.bg","text":"eval.bg generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.bg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.bg generic for ENMevaluation object — eval.bg","text":"","code":"eval.bg(x)  # S4 method for class 'ENMevaluation' eval.bg(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.bg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.bg generic for ENMevaluation object — eval.bg","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.clamp.directions.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.clamp.directions generic for ENMevaluation object — eval.clamp.directions","title":"eval.clamp.directions generic for ENMevaluation object — eval.clamp.directions","text":"eval.clamp.directions generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.clamp.directions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.clamp.directions generic for ENMevaluation object — eval.clamp.directions","text":"","code":"eval.clamp.directions(x)  # S4 method for class 'ENMevaluation' eval.clamp.directions(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.clamp.directions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.clamp.directions generic for ENMevaluation object — eval.clamp.directions","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.doClamp.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.doClamp generic for ENMevaluation object — eval.doClamp","title":"eval.doClamp generic for ENMevaluation object — eval.doClamp","text":"eval.doClamp generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.doClamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.doClamp generic for ENMevaluation object — eval.doClamp","text":"","code":"eval.doClamp(x)  # S4 method for class 'ENMevaluation' eval.doClamp(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.doClamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.doClamp generic for ENMevaluation object — eval.doClamp","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.models.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.models generic for ENMevaluation object — eval.models","title":"eval.models generic for ENMevaluation object — eval.models","text":"eval.models generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.models generic for ENMevaluation object — eval.models","text":"","code":"eval.models(x)  # S4 method for class 'ENMevaluation' eval.models(x)  # S4 method for class 'ENMevaluation' eval.variable.importance(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.models generic for ENMevaluation object — eval.models","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.occs.grp.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.occs.grp generic for ENMevaluation object — eval.occs.grp","title":"eval.occs.grp generic for ENMevaluation object — eval.occs.grp","text":"eval.occs.grp generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.occs.grp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.occs.grp generic for ENMevaluation object — eval.occs.grp","text":"","code":"eval.occs.grp(x)  # S4 method for class 'ENMevaluation' eval.occs.grp(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.occs.grp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.occs.grp generic for ENMevaluation object — eval.occs.grp","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.occs.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.occs generic for ENMevaluation object — eval.occs","title":"eval.occs generic for ENMevaluation object — eval.occs","text":"eval.occs generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.occs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.occs generic for ENMevaluation object — eval.occs","text":"","code":"eval.occs(x)  # S4 method for class 'ENMevaluation' eval.occs(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.occs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.occs generic for ENMevaluation object — eval.occs","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.occs.testing.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.occs.testing generic for ENMevaluation object — eval.occs.testing","title":"eval.occs.testing generic for ENMevaluation object — eval.occs.testing","text":"eval.occs.testing generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.occs.testing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.occs.testing generic for ENMevaluation object — eval.occs.testing","text":"","code":"eval.occs.testing(x)  # S4 method for class 'ENMevaluation' eval.occs.testing(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.occs.testing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.occs.testing generic for ENMevaluation object — eval.occs.testing","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.other.settings.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.other.settings generic for ENMevaluation object — eval.other.settings","title":"eval.other.settings generic for ENMevaluation object — eval.other.settings","text":"eval..settings generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.other.settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.other.settings generic for ENMevaluation object — eval.other.settings","text":"","code":"eval.other.settings(x)  # S4 method for class 'ENMevaluation' eval.other.settings(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.other.settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.other.settings generic for ENMevaluation object — eval.other.settings","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.overlap generic for ENMevaluation object — eval.overlap","title":"eval.overlap generic for ENMevaluation object — eval.overlap","text":"eval.overlap generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.overlap generic for ENMevaluation object — eval.overlap","text":"","code":"eval.overlap(x)  # S4 method for class 'ENMevaluation' eval.overlap(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.overlap generic for ENMevaluation object — eval.overlap","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.partition.method.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.partition.method generic for ENMevaluation object — eval.partition.method","title":"eval.partition.method generic for ENMevaluation object — eval.partition.method","text":"eval.partition.method generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.partition.method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.partition.method generic for ENMevaluation object — eval.partition.method","text":"","code":"eval.partition.method(x)  # S4 method for class 'ENMevaluation' eval.partition.method(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.partition.method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.partition.method generic for ENMevaluation object — eval.partition.method","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.partition.settings.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.partition.settings generic for ENMevaluation object — eval.partition.settings","title":"eval.partition.settings generic for ENMevaluation object — eval.partition.settings","text":"eval.partition.settings generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.partition.settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.partition.settings generic for ENMevaluation object — eval.partition.settings","text":"","code":"eval.partition.settings(x)  # S4 method for class 'ENMevaluation' eval.partition.settings(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.partition.settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.partition.settings generic for ENMevaluation object — eval.partition.settings","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.predictions generic for ENMevaluation object — eval.predictions","title":"eval.predictions generic for ENMevaluation object — eval.predictions","text":"eval.predictions generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.predictions generic for ENMevaluation object — eval.predictions","text":"","code":"eval.predictions(x)  # S4 method for class 'ENMevaluation' eval.predictions(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.predictions generic for ENMevaluation object — eval.predictions","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.results.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.results generic for ENMevaluation object — eval.results","title":"eval.results generic for ENMevaluation object — eval.results","text":"eval.results generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.results generic for ENMevaluation object — eval.results","text":"","code":"eval.results(x)  # S4 method for class 'ENMevaluation' eval.results(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.results generic for ENMevaluation object — eval.results","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.results.partitions.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.results.partitions generic for ENMevaluation object — eval.results.partitions","title":"eval.results.partitions generic for ENMevaluation object — eval.results.partitions","text":"eval.results.partitions generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.results.partitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.results.partitions generic for ENMevaluation object — eval.results.partitions","text":"","code":"eval.results.partitions(x)  # S4 method for class 'ENMevaluation' eval.results.partitions(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.results.partitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.results.partitions generic for ENMevaluation object — eval.results.partitions","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.rmm.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.rmm generic for ENMevaluation object — eval.rmm","title":"eval.rmm generic for ENMevaluation object — eval.rmm","text":"eval.rmm generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.rmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.rmm generic for ENMevaluation object — eval.rmm","text":"","code":"eval.rmm(x)  # S4 method for class 'ENMevaluation' eval.rmm(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.rmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.rmm generic for ENMevaluation object — eval.rmm","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.taxon.name.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.taxon.name generic for ENMevaluation object — eval.taxon.name","title":"eval.taxon.name generic for ENMevaluation object — eval.taxon.name","text":"eval.taxon.name generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.taxon.name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.taxon.name generic for ENMevaluation object — eval.taxon.name","text":"","code":"eval.taxon.name(x)  # S4 method for class 'ENMevaluation' eval.taxon.name(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.taxon.name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.taxon.name generic for ENMevaluation object — eval.taxon.name","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.tune.settings.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.tune.settings generic for ENMevaluation object — eval.tune.settings","title":"eval.tune.settings generic for ENMevaluation object — eval.tune.settings","text":"eval.tune.settings generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.tune.settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.tune.settings generic for ENMevaluation object — eval.tune.settings","text":"","code":"eval.tune.settings(x)  # S4 method for class 'ENMevaluation' eval.tune.settings(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.tune.settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.tune.settings generic for ENMevaluation object — eval.tune.settings","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.variable.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"eval.variable.importance (variable importance) generic for ENMevaluation object — eval.variable.importance","title":"eval.variable.importance (variable importance) generic for ENMevaluation object — eval.variable.importance","text":"eval.variable.importance (variable importance) generic ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.variable.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eval.variable.importance (variable importance) generic for ENMevaluation object — eval.variable.importance","text":"","code":"eval.variable.importance(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/eval.variable.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eval.variable.importance (variable importance) generic for ENMevaluation object — eval.variable.importance","text":"x ENMevaluation object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Similarity histogram plots for partition groups — evalplot.envSim.hist","title":"Similarity histogram plots for partition groups — evalplot.envSim.hist","text":"Plots environmental similarity reference partitions (occurrences background) remaining data (occurrence background partitions). function use raster data, thus calculates similarity values data used model training. , function calculate similarity categorical variables.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Similarity histogram plots for partition groups — evalplot.envSim.hist","text":"","code":"evalplot.envSim.hist(   e = NULL,   occs.z = NULL,   bg.z = NULL,   occs.grp = NULL,   bg.grp = NULL,   ref.data = \"occs\",   envs.vars = NULL,   occs.testing.z = NULL,   hist.bins = 30,   return.tbl = FALSE,   quiet = FALSE )"},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similarity histogram plots for partition groups — evalplot.envSim.hist","text":"e ENMevaluation object occs.z data frame: longitude, latitude, environmental predictor variable values occurrence records, order (optional); first two columns must named \"longitude\" \"latitude\" bg.z data frame: longitude, latitude, environmental predictor variable values background records, order (optional); first two columns must named \"longitude\" \"latitude\" occs.grp numeric vector: partition groups occurrence records (optional) bg.grp numeric vector: partition groups background records (optional) ref.data character: reference calculate MESS based occurrences (\"occs\") background (\"bg\"), default \"occs\" must specified function intended use continuous data ; must specified inputting tabular data instead ENMevaluation object envs.vars character vector: names predictor variable plot similarities ; left NULL, calculations done respect variables (optional) occs.testing.z data frame: longitude, latitude, environmental predictor variable values fully withheld testing records, order; use \"testing\" partition option ENMevaluation object input (optional) hist.bins numeric: number histogram bins histogram plots; default 30 return.tbl boolean: TRUE, return data frames similarity values used make ggplot instead plot quiet boolean: TRUE, silence function messages (errors)","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Similarity histogram plots for partition groups — evalplot.envSim.hist","text":"ggplot environmental similarities occurrence background data partition rest data (occurrences background data).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.hist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Similarity histogram plots for partition groups — evalplot.envSim.hist","text":"fully withheld testing groups used, make sure input either ENMevaluation object argument occs.testing.z. resulting plot, partition 1 refers training data, partition 2 refers fully withheld testing group. Histograms plotted showing environmental similarity estimates partition group relation others. similarity environmental values associated validation occurrence background records per partition group associated remaining data (training occurrences background) calculated MESS algorithm, minimum similarity per grid cell returned. Higher negative values indicate greater environmental difference validation occurrences study extent, higher positive values indicate greater similarity. function uses `mess()` function package `predicts`. Please see reference details MESS.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.hist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Similarity histogram plots for partition groups — evalplot.envSim.hist","text":"Baumgartner J, Wilson P (2021). _rmaxent: Tools working Maxent R_. R package version 0.8.5.9000, <URL: https://github.com/johnbaums/rmaxent>. Elith, J., Kearney, M., Phillips, S. (2010) art modelling range-shifting species. Methods Ecology Evolution, 1: 330-342. doi:10.1111/j.2041-210X.2010.00036.x","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Similarity histogram plots for partition groups — evalplot.envSim.hist","text":"","code":"if (FALSE) { # \\dontrun{ # first, let's tune some models occs <- read.csv(file.path(system.file(package=\"predicts\"),  \"/ex/bradypus.csv\"))[,2:3] envs <- rast(list.files(path=paste(system.file(package=\"predicts\"),  \"/ex\", sep=\"\"), pattern=\"tif$\", full.names=TRUE)) bg <- as.data.frame(predicts::backgroundSample(envs, n = 10000)) names(bg) <- names(occs)   ps <- list(orientation = \"lat_lat\")  e <- ENMevaluate(occs, envs, bg,                 tune.args = list(fc = c(\"L\",\"LQ\",\"LQH\"), rm = 1:5),                 partitions = \"block\", partition.settings = ps,                 algorithm = \"maxnet\", categoricals = \"biome\",                 parallel = TRUE)  # now, plot the environmental similarity of each partition to the others                evalplot.envSim.hist(e) } # }"},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.map.html","id":null,"dir":"Reference","previous_headings":"","what":"Similarity maps for partition groups — evalplot.envSim.map","title":"Similarity maps for partition groups — evalplot.envSim.map","text":"Maps environmental similarity reference partitions (occurrences background) cells values predictor variable rasters. function uses raster data, thus map similarity values using tables environmental values f occurrences background. , function calculate similarity categorical variables.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Similarity maps for partition groups — evalplot.envSim.map","text":"","code":"evalplot.envSim.map(   e = NULL,   envs,   occs.z = NULL,   bg.z = NULL,   occs.grp = NULL,   bg.grp = NULL,   ref.data = \"occs\",   envs.vars = NULL,   bb.buf = 0,   occs.testing.z = NULL,   plot.bg.pts = FALSE,   sim.palette = NULL,   pts.size = 1.5,   gradient.colors = c(\"red\", \"white\", \"blue\"),   na.color = \"gray\",   return.tbl = FALSE,   return.ras = FALSE,   quiet = FALSE )"},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similarity maps for partition groups — evalplot.envSim.map","text":"e ENMevaluation object (optional) envs SpatRaster: environmental predictor variables used build models \"e\"; categorical variables removed internally used calculate MESS occs.z data frame: longitude, latitude, environmental predictor variable values occurrence records, order (optional); first two columns must named \"longitude\" \"latitude\" bg.z data frame: longitude, latitude, environmental predictor variable values background records, order (optional); first two columns must named \"longitude\" \"latitude\" occs.grp numeric vector: partition groups occurrence records (optional) bg.grp numeric vector: partition groups background records (optional) ref.data character: reference calculate MESS based occurrences (\"occs\") background (\"bg\"), default \"occs\" envs.vars character vector: names predictor variable plot similarities ; left NULL, calculations done respect variables (optional) bb.buf numeric: distance used buffer (extend) mapping extent map units; latitude/longitude, degrees (optional) occs.testing.z data frame: longitude, latitude, environmental predictor variable values fully withheld testing records, order; use \"testing\" partition option ENMevaluation object input (optional) plot.bg.pts boolean: TRUE, plot background points using ref.data = \"bg\" sim.palette character: RColorBrewer palette name use plotting discrete variables; NULL, default \"Set1\" pts.size numeric: custom point size ggplot gradient.colors character vector: colors used ggplot2::scale_fill_gradient2 na.color character: color used NA values return.tbl boolean: TRUE, return data frames similarity values used make ggplot instead plot return.ras boolean: TRUE, return SpatRaster similarity values used make ggplot instead plot quiet boolean: TRUE, silence function messages (errors)","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Similarity maps for partition groups — evalplot.envSim.map","text":"ggplot environmental similarities occurrence background data partition predictor variable values extent.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Similarity maps for partition groups — evalplot.envSim.map","text":"fully withheld testing groups used, make sure input either ENMevaluation object argument occs.testing.z. resulting plot, partition 1 refers training data, partition 2 refers fully withheld testing group. Rasters plotted showing environmental similarity estimates partition group relation others. similarity environmental values associated validation occurrence background records per partition group associated entire study extent (specified extent input SpatRaster \"envs\") calculated MESS algorithm, minimum similarity per grid cell returned. Higher negative values indicate greater environmental difference validation occurrences study extent, higher positive values indicate greater similarity. function uses `mess()` function package `predicts` calculate similarities. Please see reference details MESS.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.map.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Similarity maps for partition groups — evalplot.envSim.map","text":"Baumgartner J, Wilson P (2021). _rmaxent: Tools working Maxent R_. R package version 0.8.5.9000, <URL: https://github.com/johnbaums/rmaxent>. Elith, J., Kearney, M., Phillips, S. (2010) art modelling range-shifting species. Methods Ecology Evolution, 1: 330-342. doi:10.1111/j.2041-210X.2010.00036.x","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.envSim.map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Similarity maps for partition groups — evalplot.envSim.map","text":"","code":"if (FALSE) { # \\dontrun{ library(terra) library(ENMeval)  # first, let's tune some models occs <- read.csv(file.path(system.file(package=\"predicts\"),  \"/ex/bradypus.csv\"))[,2:3] envs <- rast(list.files(path=paste(system.file(package=\"predicts\"),  \"/ex\", sep=\"\"), pattern=\"tif$\", full.names=TRUE)) bg <- as.data.frame(predicts::backgroundSample(envs, n = 10000)) names(bg) <- names(occs)   ps <- list(orientation = \"lat_lat\")  e <- ENMevaluate(occs, envs, bg,                 tune.args = list(fc = c(\"L\",\"LQ\",\"LQH\"), rm = 1:5),                 partitions = \"block\", partition.settings = ps,                 algorithm = \"maxnet\", categoricals = \"biome\",                 parallel = TRUE)  # now, plot the environmental similarity of each partition to the others                evalplot.envSim.map(e, envs) } # }"},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.grps.html","id":null,"dir":"Reference","previous_headings":"","what":"Partition group plots — evalplot.grps","title":"Partition group plots — evalplot.grps","text":"Plot occurrence partition groups environmental predictor raster.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.grps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition group plots — evalplot.grps","text":"","code":"evalplot.grps(   e = NULL,   envs,   pts = NULL,   pts.grp = NULL,   ref.data = \"occs\",   pts.size = 1.5,   return.tbl = FALSE )"},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.grps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partition group plots — evalplot.grps","text":"e ENMevaluation object envs SpatRaster: environmental predictor variable used build models \"e\" pts matrix / data frame: coordinates occurrence background data pts.grp numeric vector: partition groups corresponding data \"pts\" ref.data character: plot occurrences (\"occs\") background (\"bg\"), default \"occs\" pts.size numeric: custom point size ggplot return.tbl boolean: TRUE, return data frames used make ggplot instead plot ","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.grps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Partition group plots — evalplot.grps","text":"function serves quick way visualize occurrence background partitions extent environmental predictor raster. can run existing ENMevaluation object, alternatively occurrence background coordinates corresponding partitions.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.grps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Partition group plots — evalplot.grps","text":"","code":"if (FALSE) { # \\dontrun{ library(terra) library(ENMeval) occs <- read.csv(file.path(system.file(package=\"predicts\"),                             \"/ex/bradypus.csv\"))[,2:3] envs <- rast(list.files(path=paste(system.file(package=\"predicts\"),                                     \"/ex\", sep=\"\"), pattern=\"tif$\", full.names=TRUE)) bg <- as.data.frame(predicts::backgroundSample(envs, n = 10000)) names(bg) <- names(occs)  parts <- get.block(occs, bg, orientation = \"lat_lon\")  # now, plot the partition groups for occurrence and background points evalplot.grps(envs = envs, pts = occs, pts.grp = parts$occs.grp) evalplot.grps(envs = envs, pts = bg, pts.grp = parts$bg.grp)  # you can also plot with an ENMevaluation object ps <- list(orientation = \"lat_lon\") e <- ENMevaluate(occs, envs, bg,                   tune.args = list(fc = c(\"L\",\"LQ\"), rm = 1:3),                   partitions = \"block\", partition.settings = ps,                   algorithm = \"maxnet\", categoricals = \"biome\",                   parallel = TRUE)  evalplot.grps(e = e, envs = envs, ref.data = \"occs\") evalplot.grps(e = e, envs = envs, ref.data = \"bg\") } # }"},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.nulls.html","id":null,"dir":"Reference","previous_headings":"","what":"ENMnulls statistics plot — evalplot.nulls","title":"ENMnulls statistics plot — evalplot.nulls","text":"Plot histogram evaluation statistics null ENM simulations","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.nulls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ENMnulls statistics plot — evalplot.nulls","text":"","code":"evalplot.nulls(   e.null,   stats,   plot.type,   facet.labels = NULL,   metric.levels = NULL,   return.tbl = FALSE )"},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.nulls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ENMnulls statistics plot — evalplot.nulls","text":"e.null ENMnull object stats character vector: metrics results table plotted; examples \"auc.val\" \".10p\"; one statistic specified, histogram plot faceted plot.type character: either \"violin\" \"histogram\" facet.labels named list: custom names metric facets, form list(old_name = \"new_name\", ...) metric.levels character vector: custom factor levels metrics; controls order metric statistics plotted return.tbl boolean: TRUE, return data frames null results used make ggplot instead plot ","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.nulls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ENMnulls statistics plot — evalplot.nulls","text":"ggplot null model statistics.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.nulls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ENMnulls statistics plot — evalplot.nulls","text":"two variations plot, show null quantiles (0.01, 0.05, 0.5, 0.95, 0.99). violin plots, null distribution displayed vertical shape (.e., violin) horizontal lines showing quantiles empirical value plotted red point along vertical axis. histogram plots, null distribution displayed histogram vertical lines showing quantiles empirical value vertical red line distribution.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.nulls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ENMnulls statistics plot — evalplot.nulls","text":"","code":"if (FALSE) { # \\dontrun{ # first, let's tune some models occs <- read.csv(file.path(system.file(package=\"predicts\"),                             \"/ex/bradypus.csv\"))[,2:3] envs <- rast(list.files(path=paste(system.file(package=\"predicts\"),                                     \"/ex\", sep=\"\"), pattern=\"tif$\", full.names=TRUE)) bg <- as.data.frame(predicts::backgroundSample(envs, n = 10000)) names(bg) <- names(occs)  ps <- list(orientation = \"lat_lat\")  e <- ENMevaluate(occs, envs, bg,                   tune.args = list(fc = c(\"L\",\"LQ\",\"LQH\"), rm = 2:4), partitions = \"block\",                   partition.settings = ps, algorithm = \"maxnet\", categoricals = \"biome\",                  parallel = TRUE)  d <- eval.results(e)  # here, we will choose an optimal model based on validation CBI, but you can # choose yourself what evaluation statistics to use opt <- d |> filter(cbi.val.avg == max(cbi.val.avg))  # now we can run our null models  # NOTE: you should use at least 100 iterations in practice -- this is just an # example nulls <- ENMnulls(e, mod.settings = list(fc = opt$fc, rm = opt$rm), no.iter = 10)  # let's plot the null model results evalplot.nulls(nulls, stats = c(\"cbi.val\", \"auc.val\"), plot.type = \"violin\") } # }"},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.stats.html","id":null,"dir":"Reference","previous_headings":"","what":"ENMevaluation statistics plot — evalplot.stats","title":"ENMevaluation statistics plot — evalplot.stats","text":"Plot evaluation statistics tuning parameter ranges visualize differences performance","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ENMevaluation statistics plot — evalplot.stats","text":"","code":"evalplot.stats(   e,   stats,   x.var,   color.var,   dodge = NULL,   error.bars = TRUE,   facet.labels = NULL,   metric.levels = NULL,   return.tbl = FALSE )"},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ENMevaluation statistics plot — evalplot.stats","text":"e ENMevaluation object stats character vector: names statistics results table plotted; one statistic specified, plot faceted x.var character: variable plotted x-axis color.var character: variable used assign symbology colors dodge numeric: dodge width points lines; improves visibility high overlap (optional) error.bars boolean: TRUE, plot error bars facet.labels character vector: custom names metric facets metric.levels character vector: custom factor levels metrics; controls order metric statistics plotted return.tbl boolean: TRUE, return data frames results used make ggplot instead plot ","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ENMevaluation statistics plot — evalplot.stats","text":"ggplot evaluation statistics.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ENMevaluation statistics plot — evalplot.stats","text":"plot, x-axis represents tuning parameter range, y-axis represents average statistic partitions. Different colors represent categories values another tuning parameter. Error bars represent standard deviation statistic around mean. Currently, function can plot two tuning parameters time.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/evalplot.stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ENMevaluation statistics plot — evalplot.stats","text":"","code":"if (FALSE) { # \\dontrun{ # first, let's tune some models occs <- read.csv(file.path(system.file(package=\"predicts\"),  \"/ex/bradypus.csv\"))[,2:3] envs <- rast(list.files(path=paste(system.file(package=\"predicts\"),  \"/ex\", sep=\"\"), pattern=\"tif$\", full.names=TRUE)) bg <- as.data.frame(predicts::backgroundSample(envs, n = 10000)) names(bg) <- names(occs)   ps <- list(orientation = \"lat_lat\") e <- ENMevaluate(occs, envs, bg,                 tune.args = list(fc = c(\"L\",\"LQ\",\"LQH\"), rm = 1:5),                 partitions = \"block\", partition.settings = ps,                 algorithm = \"maxnet\", categoricals = \"biome\",                 parallel = TRUE)                 evalplot.stats(e, c(\"cbi.val\", \"or.mtp\"), x.var = \"rm\", color.var = \"fc\",               error.bars = FALSE) } # }"},{"path":"https://jamiemkass.github.io/ENMeval/reference/loadENMevaluation.html","id":null,"dir":"Reference","previous_headings":"","what":"Load ENMevaluation object — loadENMevaluation","title":"Load ENMevaluation object — loadENMevaluation","text":"Load ENMevaluation object .rds file. necessary use instead readRDS() wrapped terra SpatRasters require unwrap() loading raster data. convenience function .","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/loadENMevaluation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load ENMevaluation object — loadENMevaluation","text":"","code":"loadENMevaluation(filename)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/loadENMevaluation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load ENMevaluation object — loadENMevaluation","text":"filename character: path .rds file load","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/lookup.enm.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up ENMdetails abject — lookup.enm","title":"Look up ENMdetails abject — lookup.enm","text":"Internal function look ENMdetails objects.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/lookup.enm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up ENMdetails abject — lookup.enm","text":"","code":"lookup.enm(algorithm)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/lookup.enm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up ENMdetails abject — lookup.enm","text":"algorithm character: algorithm name (must implemented ENMdetails object)","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/maxentJARversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up version of maxent.jar — maxentJARversion","title":"Look up version of maxent.jar — maxentJARversion","text":"Internal function look version maxent.jar used.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/maxentJARversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up version of maxent.jar — maxentJARversion","text":"","code":"maxentJARversion()"},{"path":"https://jamiemkass.github.io/ENMeval/reference/maxnet.predictRaster.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict raster for maxnet — maxnet.predictRaster","title":"Predict raster for maxnet — maxnet.predictRaster","text":"maxnet native functionality making prediction rasters, function . wrapper internal enm.maxnet@predict function, really intended use outside package.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/maxnet.predictRaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict raster for maxnet — maxnet.predictRaster","text":"","code":"maxnet.predictRaster(mod, envs, pred.type = \"cloglog\", doClamp = TRUE, ...)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/maxnet.predictRaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict raster for maxnet — maxnet.predictRaster","text":"mod maxnet object envs SpatRaster pred.type character: type maxnet prediction make; default \"cloglog\" doClamp Boolean: whether clamp predictions ... additional parameters","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.algorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"null.algorithm generic for ENMnull object — null.algorithm","title":"null.algorithm generic for ENMnull object — null.algorithm","text":"null.algorithm generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.algorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.algorithm generic for ENMnull object — null.algorithm","text":"","code":"null.algorithm(x)  # S4 method for class 'ENMnull' null.algorithm(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.algorithm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.algorithm generic for ENMnull object — null.algorithm","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.doClamp.html","id":null,"dir":"Reference","previous_headings":"","what":"null.doClamp generic for ENMnull object — null.doClamp","title":"null.doClamp generic for ENMnull object — null.doClamp","text":"null.doClamp generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.doClamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.doClamp generic for ENMnull object — null.doClamp","text":"","code":"null.doClamp(x)  # S4 method for class 'ENMnull' null.doClamp(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.doClamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.doClamp generic for ENMnull object — null.doClamp","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.emp.results.html","id":null,"dir":"Reference","previous_headings":"","what":"null.emp.results generic for ENMnull object — null.emp.results","title":"null.emp.results generic for ENMnull object — null.emp.results","text":"null.emp.results generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.emp.results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.emp.results generic for ENMnull object — null.emp.results","text":"","code":"null.emp.results(x)  # S4 method for class 'ENMnull' null.emp.results(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.emp.results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.emp.results generic for ENMnull object — null.emp.results","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.mod.settings.html","id":null,"dir":"Reference","previous_headings":"","what":"null.mod.settings generic for ENMnull object — null.mod.settings","title":"null.mod.settings generic for ENMnull object — null.mod.settings","text":"null.mod.settings generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.mod.settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.mod.settings generic for ENMnull object — null.mod.settings","text":"","code":"null.mod.settings(x)  # S4 method for class 'ENMnull' null.mod.settings(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.mod.settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.mod.settings generic for ENMnull object — null.mod.settings","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.no.iter.html","id":null,"dir":"Reference","previous_headings":"","what":"null.no.iter generic for ENMnull object — null.no.iter","title":"null.no.iter generic for ENMnull object — null.no.iter","text":"null..iter generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.no.iter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.no.iter generic for ENMnull object — null.no.iter","text":"","code":"null.no.iter(x)  # S4 method for class 'ENMnull' null.no.iter(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.no.iter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.no.iter generic for ENMnull object — null.no.iter","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.other.settings.html","id":null,"dir":"Reference","previous_headings":"","what":"null.other.settings generic for ENMnull object — null.other.settings","title":"null.other.settings generic for ENMnull object — null.other.settings","text":"null..settings generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.other.settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.other.settings generic for ENMnull object — null.other.settings","text":"","code":"null.other.settings(x)  # S4 method for class 'ENMnull' null.other.settings(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.other.settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.other.settings generic for ENMnull object — null.other.settings","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.partition.method.html","id":null,"dir":"Reference","previous_headings":"","what":"null.partition.method generic for ENMnull object — null.partition.method","title":"null.partition.method generic for ENMnull object — null.partition.method","text":"null.partition.method generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.partition.method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.partition.method generic for ENMnull object — null.partition.method","text":"","code":"null.partition.method(x)  # S4 method for class 'ENMnull' null.partition.method(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.partition.method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.partition.method generic for ENMnull object — null.partition.method","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.partition.settings.html","id":null,"dir":"Reference","previous_headings":"","what":"null.partition.settings generic for ENMnull object — null.partition.settings","title":"null.partition.settings generic for ENMnull object — null.partition.settings","text":"null.partition.settings generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.partition.settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.partition.settings generic for ENMnull object — null.partition.settings","text":"","code":"null.partition.settings(x)  # S4 method for class 'ENMnull' null.partition.settings(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.partition.settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.partition.settings generic for ENMnull object — null.partition.settings","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.results.html","id":null,"dir":"Reference","previous_headings":"","what":"null.results generic for ENMnull object — null.results","title":"null.results generic for ENMnull object — null.results","text":"null.results generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.results generic for ENMnull object — null.results","text":"","code":"null.results(x)  # S4 method for class 'ENMnull' null.results(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.results generic for ENMnull object — null.results","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.results.partitions.html","id":null,"dir":"Reference","previous_headings":"","what":"null.results.partitions generic for ENMnull object — null.results.partitions","title":"null.results.partitions generic for ENMnull object — null.results.partitions","text":"null.results.partitions generic ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.results.partitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null.results.partitions generic for ENMnull object — null.results.partitions","text":"","code":"null.results.partitions(x)  # S4 method for class 'ENMnull' null.results.partitions(x)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/null.results.partitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null.results.partitions generic for ENMnull object — null.results.partitions","text":"x ENMnull object","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/parse_lambdas.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Maxent lambdas information — parse_lambdas","title":"Parse Maxent lambdas information — parse_lambdas","text":"NOTICE: function borrowed rmaxent package written John Baumgartner (https://github.com/johnbaums/rmaxent/). (dependencies Github-packages allowed CRAN). Parse Maxent .lambdas files extract types, weights, minima maxima features, well fitted model's entropy values required predicting new data.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/parse_lambdas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Maxent lambdas information — parse_lambdas","text":"","code":"parse_lambdas(lambdas)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/parse_lambdas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Maxent lambdas information — parse_lambdas","text":"lambdas Either `MaxEnt` fitted model object (fitted `maxent` function `dismo` package), file path Maxent .lambdas file.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/parse_lambdas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Maxent lambdas information — parse_lambdas","text":"list (class `lambdas`) five elements: * `lambdas`: `data.frame` describing features used   Maxent model, including weights (lambdas), maxima, minima,   type; * `linearPredictorNormalizer`: constant ensures   linear predictor (sum clamped features multiplied   respective feature weights) always negative (numerical stability); * `densityNormalizer`: scaling constant ensures Maxent's   raw output sums 1 background points; * `numBackgroundPoints`: number background points used   model training; * `entropy`: entropy fitted model.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/parse_lambdas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parse Maxent lambdas information — parse_lambdas","text":"* Wilson, P. W. (2009) [_Guidelines computing MaxEnt model output values lambdas file_](http://gis.humboldt.edu/OLM/Courses/GSP_570/Learning%20Modules/10%20BlueSpray_Maxent_Uncertinaty/MaxEnt%20lambda%20files.pdf). * _Maxent software species habitat modeling, version 3.3.3k_ help file (software freely available [](https://www.cs.princeton.edu/~schapire/maxent/)).","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/parse_lambdas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Maxent lambdas information — parse_lambdas","text":"","code":"# Below we use the predicts::MaxEnt example to fit a model: library(predicts) #> Loading required package: terra #> terra 1.8.10 occs <- read.csv(file.path(system.file(package=\"predicts\"), \"/ex/bradypus.csv\"))[,2:3] predictors <- rast(file.path(system.file(package='predicts'), '/ex/bio.tif')) me <- MaxEnt(predictors, occs) #> Loading required namespace: rJava # ... and then parse the lambdas information: lam <- parse_lambdas(me) lam #> $lambdas #>        feature         var        lambda       min        max          type #> 1         bio1        bio1  1.910476e+00     -23.0      289.0        linear #> 2        bio12       bio12  7.093663e-01       0.0     7682.0        linear #> 3        bio16       bio16  0.000000e+00       0.0     2458.0        linear #> 4        bio17       bio17 -3.851500e+00       0.0     1496.0        linear #> 5         bio5        bio5  0.000000e+00      61.0      422.0        linear #> 6         bio6        bio6  0.000000e+00    -212.0      242.0        linear #> 7         bio7        bio7 -1.725647e+01      60.0      461.0        linear #> 8         bio8        bio8  3.870400e-01     -66.0      323.0        linear #> 9         bio9        bio9  8.186268e-01     -23.0      289.0        linear #> 10     bio12^2       bio12  5.919734e-02       0.0 59013124.0     quadratic #> 11     bio16^2       bio16  3.039654e-01       0.0  6041764.0     quadratic #> 12      bio6^2        bio6 -2.442335e+00       0.0    58564.0     quadratic #> 13  bio1*bio12  bio1,bio12  2.840565e-01  -14571.0  2028048.0       product #> 14 bio12*bio16 bio12,bio16  3.220484e-01       0.0 18636532.0       product #> 15  bio12*bio5  bio12,bio5  6.430193e-04       0.0  2396784.0       product #> 16  bio12*bio6  bio12,bio6  1.644931e-01 -156047.0  1674676.0       product #> 17  bio12*bio7  bio12,bio7  8.865686e-01       0.0   737464.0       product #> 18  bio12*bio8  bio12,bio8  3.011205e+00  -27324.0  2020366.0       product #> 19  bio12*bio9  bio12,bio9  3.059475e-01  -14571.0  2028048.0       product #> 20  bio16*bio8  bio16,bio8  6.038987e-01  -13332.0   638038.0       product #> 21   bio5*bio7   bio5,bio7 -4.103028e-01    8235.0   162812.0       product #> 22      `bio17       bio17 -1.970418e-01       0.0       89.5 reverse_hinge #> 23      `bio17       bio17 -5.218809e-02       0.0       62.5 reverse_hinge #> 24       'bio5        bio5 -1.635089e+00     287.5      422.0 forward_hinge #> 25      `bio17       bio17 -1.260720e+00       0.0       52.5 reverse_hinge #> 26       'bio5        bio5 -8.593232e-01     283.5      422.0 forward_hinge #> 27       `bio1        bio1 -1.528864e+00     -23.0      180.5 reverse_hinge #> 28       'bio6        bio6 -1.075395e+00     203.5      242.0 forward_hinge #> 29      `bio16       bio16 -9.611040e-01       0.0      531.5 reverse_hinge #> 30       'bio1        bio1  1.826304e+00     265.5      289.0 forward_hinge #> 31       'bio6        bio6 -2.437269e-01     204.5      242.0 forward_hinge #> 32      'bio16       bio16  3.590613e-01    2394.0     2458.0 forward_hinge #> 33      'bio17       bio17  1.020436e-01    1229.5     1496.0 forward_hinge #> 34      'bio17       bio17  1.335425e+00    1202.5     1496.0 forward_hinge #> 35       'bio8        bio8  1.082490e+00     256.5      323.0 forward_hinge #> 36       'bio6        bio6 -2.318697e-01     197.5      242.0 forward_hinge #> 37       'bio1        bio1  4.046470e-01     258.5      289.0 forward_hinge #> 38       'bio5        bio5 -4.581517e-01     255.5      422.0 forward_hinge #> 39       'bio5        bio5 -2.546101e-01     258.5      422.0 forward_hinge #> 40       `bio7        bio7 -9.515878e-01      60.0      111.5 reverse_hinge #> 41       'bio9        bio9  5.708096e-01     265.5      289.0 forward_hinge #> 42       'bio9        bio9  7.703929e-02     258.5      289.0 forward_hinge #> 43      `bio17       bio17 -3.679882e-02       0.0       53.5 reverse_hinge #>  #> $linearPredictorNormalizer #> [1] 2.283563 #>  #> $densityNormalizer #> [1] 117.8422 #>  #> $numBackgroundPoints #> [1] 9775 #>  #> $entropy #> [1] 7.9527 #>  #> attr(,\"class\") #> [1] \"lambdas\" str(lam, 1) #> List of 5 #>  $ lambdas                  :'data.frame':\t43 obs. of  6 variables: #>  $ linearPredictorNormalizer: num 2.28 #>  $ densityNormalizer        : num 118 #>  $ numBackgroundPoints      : num 9775 #>  $ entropy                  : num 7.95 #>  - attr(*, \"class\")= chr \"lambdas\""},{"path":"https://jamiemkass.github.io/ENMeval/reference/partitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods to partition data for evaluation — partitions","title":"Methods to partition data for evaluation — partitions","text":"ENMeval provides several ways partition occurrence background localities bins training validation (, evaluation calibration). Users carefully consider objectives study influence spatial bias deciding method data partitioning. functions used internally partition data call ENMevaluate can also used independently generate data partitions. user-specified partitions, users can simply define groups occurrence records background points directly ENMevaluate. get.block method partitions occurrence localities finding latitude /longitude lines divide occurrence localities four groups (insofar possible) equal numbers. order nature divisions can controlled \"orientation\" parameter. default \"lat_lon\", divides first latitudinal line, second longitudinal lines. method based spatial partitioning technique described Radosavljevic & Anderson (2014), \"lon_lon\" option used. Background localities assigned four groups based position respect lines. get.block method results (approximately) equal division occurrence localities among four groups, number background localities (, consequently, environmental geographic space) group depends distribution occurrence localities across study area. get.checkerboard methods variants checkerboard approach partition occurrence localities. methods use spatSample function terra package (Hijmans 2023) partition records according checkerboard squares generated based input rasters. spatial grain squares determined resampling (aggregating) original environmental input grids based user-defined aggregation factor (e.g., aggregation factor value 2 results checkerboard grid cells four times area original input rasters). one input aggregation factor, get.checkerboard partitions data two groups according 'basic' checkerboard pattern. two aggregation factors, get.checkerboard partitions data four groups according 'hierarchical', nested, checkerboard squares (see Muscarella et al. 2014). contrast get.block method, get.checkerboard methods subdivide geographic space equally ensure balanced number occurrence localities group. get.checkerboard methods give warnings (potentially errors) zero points (occurrence background) fall expected bins. get.jackknife method special case k-fold cross validation number bins (k) equal number occurrence localities (n) dataset. suggested occurrence datasets relatively small sample size (generally < 25 localities) (Pearson et al. 2007; Shcheglovitova Anderson 2013). get.randomkfold method partitions occurrence localities randomly user-specified number (k) bins. equivalent method k-fold cross validation currently provided Maxent. Users can also define custom partitions occurrence background data call `ENMevaluate` \"user.grp\" parameter.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/partitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods to partition data for evaluation — partitions","text":"","code":"get.block(occs, bg, orientation = \"lat_lon\")  get.checkerboard(occs, envs, bg, aggregation.factor, gridSampleN = 10000)  get.checkerboard1(occs, envs, bg, aggregation.factor, gridSampleN = 10000)  get.checkerboard2(occs, envs, bg, aggregation.factor, gridSampleN = 10000)  get.jackknife(occs, bg)  get.randomkfold(occs, bg, kfolds)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/partitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods to partition data for evaluation — partitions","text":"occs matrix / data frame: longitude latitude (order) occurrence localities bg matrix / data frame: longitude latitude (order) background localities orientation character vector: order spatial partitioning get.block method; first direction bisects points two groups, second direction bisects two groups , resulting four groups; options \"lat_lon\" (default), \"lon_lat\", \"lon_lon\", \"lat_lat\" envs SpatRaster: environmental predictor variables aggregation.factor numeric numeric vector: scale aggregation get.checkerboard; can one value ('basic') two values ('hierarchical') – see Details. gridSampleN numeric: number points sampled input raster using gridSample() checkerboard partitioning functions kfolds numeric: number random k-folds get.randomkfold method","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/partitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods to partition data for evaluation — partitions","text":"named list two items: $occs.grp vector bin designation occurrence localities order provided. $bg.grp vector bin designation background localities order provided.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/partitions.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Methods to partition data for evaluation — partitions","text":"checkerboard methods designed partition occurrence localities spatial evaluation bins: two ('basic', one aggregation factor) four ('hierarchical', two aggregation factors). may give fewer bins, however, depending occurrence localities fall respect grid cells (e.g., records happen fall one group checkerboard squares). warning given number bins < 4 hierarchical method, error given localities fall single evaluation bin.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/partitions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Methods to partition data for evaluation — partitions","text":"Hijmans, R. J. (2023). terra: Spatial Data Analysis. Available online : https://cran.r-project.org/package=terra. Muscarella, R., Galante, P. J., Soley‐Guardia, M., Boria, R. ., Kass, J. M., Uriarte, M., & Anderson, R. P. (2014). ENMeval: R package conducting spatially independent evaluations estimating optimal model complexity Maxent ecological niche models. Methods Ecology Evolution, 5(11), 1198-1205. doi:10.1111/2041-210X.12945 Pearson, R. G., Raxworthy, C. J., Nakamura, M. Peterson, . T. (2007). Predicting species distributions small numbers occurrence records: test case using cryptic geckos Madagascar. Journal Biogeography, 34: 102-117. doi:10.1111/j.1365-2699.2006.01594.x Radosavljevic, ., & Anderson, R. P. (2014). Making better Maxent models species distributions: complexity, overfitting evaluation. Journal Biogeography, 41: 629-643. doi:10.1111/jbi.12227 Shcheglovitova, M. Anderson, R. P. (2013). Estimating optimal complexity ecological niche models: jackknife approach species small sample sizes. Ecological Modelling, 269: 9-17. doi:10.1016/j.ecolmodel.2013.08.011","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/partitions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Methods to partition data for evaluation — partitions","text":"Robert Muscarella <bob.muscarella@gmail.com> Jamie M. Kass <jamie.m.kass@gmail.com>","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/partitions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods to partition data for evaluation — partitions","text":"","code":"library(terra)  set.seed(1)  ### Create environmental extent (raster) envs <- rast(nrow = 25, ncol = 25, xmin = 0, xmax = 1, ymin = 0, ymax = 1)  ### Create occurrence localities set.seed(1) nocc <- 25 xocc <- rnorm(nocc, sd=0.25) + 0.5 yocc <- runif(nocc, 0, 1) occs <- as.data.frame(cbind(xocc, yocc))  ### Create background points nbg <- 500 xbg <- runif(nbg, 0, 1) ybg <- runif(nbg, 0, 1) bg <- as.data.frame(cbind(xbg, ybg))  ### Plot points on environmental raster plot(envs) points(bg) points(occs, pch=21, bg=2)   ### Block partitioning method (default orientation is \"lat_lon\")) blk.latLon <- get.block(occs, bg) plot(envs) points(occs, pch=23, bg=blk.latLon$occs.grp)  plot(envs) points(bg, pch=21, bg=blk.latLon$bg.grp)  # Can partition with other orientations blk.latLat <- get.block(occs, bg, orientation = \"lat_lat\") plot(envs) points(occs, pch=23, bg=blk.latLat$occs.grp)  plot(envs) points(bg, pch=21, bg=blk.latLat$bg.grp)   ### Checkerboard partitioning method with aggregation factor of 4 chk.ag4 <- get.checkerboard(occs, envs, bg, aggregation.factor = 4) #> Generating basic checkerboard partitions... plot(envs) points(occs, pch=23, bg=chk.ag4$occs.grp)  plot(envs) points(bg, pch=21, bg=chk.ag4$bg.grp)  # Higher aggregation factors result in bigger checkerboard blocks chk.ag8 <- get.checkerboard(occs, envs, bg, aggregation.factor = 8) #> Generating basic checkerboard partitions... plot(envs) points(occs, pch=23, bg=chk.ag8$occs.grp)  plot(envs) points(bg, pch=21, bg=chk.ag8$bg.grp)   ### Hierarchical checkerboard partitioning method with aggregation factors  ### of 2 and 2 chk.ag2_2 <- get.checkerboard(occs, envs, bg, c(2,2)) #> Generating hierarchical checkerboard partitions... plot(envs) points(occs, pch=23, bg=chk.ag2_2$occs.grp)  plot(envs) points(bg, pch=21, bg=chk.ag2_2$bg.grp)  # Higher aggregation factors result in bigger checkerboard blocks, # and can vary between hierarchical levels chk.ag4_6 <- get.checkerboard(occs, envs, bg, c(3,4)) #> Generating hierarchical checkerboard partitions... plot(envs) points(occs, pch=23, bg=chk.ag4_6$occs.grp)  plot(envs) points(bg, pch=21, bg=chk.ag4_6$bg.grp)   ### Random partitions with 4 folds # Note that get.randomkkfold does not partition the background krandom <- get.randomkfold(occs, bg, 4) plot(envs) points(occs, pch=23, bg=krandom$occs.grp)  plot(envs) points(bg, pch=21, bg=krandom$bg.grp)   ### k-1 jackknife partitions # Note that get.jackknife does not partition the background jack <- get.jackknife(occs, bg) plot(envs) points(occs, pch=23, bg=rainbow(length(jack$occs.grp)))  plot(envs) points(bg, pch=21, bg=jack$bg.grp)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/plot.sim.dataPrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal plotting function — plot.sim.dataPrep","title":"Internal plotting function — plot.sim.dataPrep","text":"function preps data plotting.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/plot.sim.dataPrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal plotting function — plot.sim.dataPrep","text":"","code":"# S3 method for class 'sim.dataPrep' plot(e, envs, occs.z, bg.z, occs.grp, bg.grp, ref.data, occs.testing.z, quiet)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/plot.sim.dataPrep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal plotting function — plot.sim.dataPrep","text":"","code":"if (FALSE) { # \\dontrun{ plot.sim.dataPrep() } # }"},{"path":"https://jamiemkass.github.io/ENMeval/reference/saveENMevaluation.html","id":null,"dir":"Reference","previous_headings":"","what":"Save ENMevaluation object — saveENMevaluation","title":"Save ENMevaluation object — saveENMevaluation","text":"Save ENMevaluation object .rds file. necessary use instead saveRDS() terra SpatRasters require wrap() saving preserve connections raster data. convenience function .","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/saveENMevaluation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save ENMevaluation object — saveENMevaluation","text":"","code":"saveENMevaluation(e, filename)"},{"path":"https://jamiemkass.github.io/ENMeval/reference/saveENMevaluation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save ENMevaluation object — saveENMevaluation","text":"e ENMevaluation object filename character: path file create .rds extension","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/tune.enm.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterate tuning of ENMs — tune.enm","title":"Iterate tuning of ENMs — tune.enm","text":"Internal functions tune summarize results ecological niche models (ENMs) iteratively across range user-specified tuning settings. See ENMevaluate descriptions shared arguments. Function tune.parallel() tunes ENMs parallelization. Function cv.enm() calculates training validation evaluation statistics one set specified tuning parameters. Validation CBI calculated background values, raster data, order standardize methodology training validation data spatial partitions, ENMeval mask rasters partition areas hence partitioned raster data. , predictions occurrence background localities combined input parameter \"fit\" ecospat::ecospat_boyce() interval determined \"fit\" , test occurrences higher predictions background, interval cut short.","code":""},{"path":"https://jamiemkass.github.io/ENMeval/reference/tune.enm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterate tuning of ENMs — tune.enm","text":"","code":"tune.train(   enm,   occs.z,   bg.z,   mod.full,   tune.tbl.i,   other.settings,   partitions,   quiet )  tune.validate(   enm,   occs.train.z,   occs.val.z,   bg.train.z,   bg.val.z,   mod.k,   nk,   tune.tbl.i,   other.settings,   partitions,   user.eval,   quiet )  tune(   d,   enm,   partitions,   tune.tbl,   doClamp,   other.settings,   partition.settings,   user.val.grps,   occs.testing.z,   numCores,   parallel,   user.eval,   algorithm,   updateProgress,   quiet )  cv.enm(   d,   enm,   partitions,   tune.tbl.i,   doClamp,   other.settings,   partition.settings,   user.val.grps,   occs.testing.z,   user.eval,   algorithm,   quiet )"},{"path":"https://jamiemkass.github.io/ENMeval/reference/tune.enm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterate tuning of ENMs — tune.enm","text":"enm ENMdetails object occs.z data.frame: envs values coordinates full dataset occurrence records bg.z data.frame: envs values coordinates full dataset background records mod.full model object: model trained full dataset tune.tbl.vector: single set tuning parameters .settings named list: used specify extra settings analysis. settings internal defaults, specified analysis run default settings. See Details descriptions settings, including specify arguments maxent.jar. partitions character: name partitioning technique (see ?partitions) quiet boolean: TRUE, silence function messages (errors). occs.train.z data.frame: envs values coordinates training occurrence records occs.val.z data.frame: envs values coordinates validation occurrence records bg.train.z data.frame: envs values coordinates training background records bg.val.z data.frame: envs values coordinates validation background records mod.k model object: model trained training dataset becomes evaluated validation data nk numeric: number folds (.e., partitions) – equal kfolds random partitions user.eval function: custom function specifying performance metrics included ENMeval. function must first defined input argument user.eval. function single argument called vars, list includes different data can used calculate metric. See Details vignette worked example. d data frame: data frame ENMevaluate() occurrence background coordinates (coordinates plus predictor variable values) partition group values tune.tbl data frame: combinations tuning parameters doClamp boolean: TRUE (default), model prediction extrapolations restricted upper lower bounds predictor variables. Clamping avoids extreme predictions environment values outside range training data. free extrapolation study aim, set FALSE, applications leaving default TRUE advisable avoid unrealistic predictions. predictor variables input, clamped internally making model predictions clamping . predictor variables input data frames coordinates variable values used instead (SWD format), validation data clamped making model predictions clamping . partition.settings named list: used specify certain settings partitioning schema. See Details ?partitions descriptions settings. user.val.grps matrix / data frame: user-defined validation record coordinates predictor variable values. used internally ENMnulls() force null model evaluate empirical validation data, current use running ENMevaluate() independently. occs.testing.z data.frame: fully withheld testing data provided, envs values coordinates testing occurrence records numCores numeric: number cores use parallel processing. NULL, available cores used. parallel boolean: TRUE, run parallel processing. algorithm character: name algorithm used build models. Currently one \"maxnet\", \"maxent.jar\", \"bioclim\", else name custom ENMdetails implementation. updateProgress boolean: TRUE, use shiny progress bar. use shiny apps.","code":""}]
